# Note: Not adding to openstack-helm yet
diff --git a/ovn/templates/bin/_ovn-bgp-agent-init.sh.tpl b/ovn/templates/bin/_ovn-bgp-agent-init.sh.tpl
new file mode 100644
index 00000000..45589c66
--- /dev/null
+++ b/ovn/templates/bin/_ovn-bgp-agent-init.sh.tpl
@@ -0,0 +1,32 @@
+#!/bin/bash
+
+{{/*
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+   http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/}}
+
+set -ex
+
+# See: https://bugs.launchpad.net/neutron/+bug/2028442
+mkdir -p /tmp/pod-shared
+tee > /tmp/pod-shared/ovn.ini << EOF
+[ovn]
+ovn_nb_connection=tcp:$OVN_OVSDB_NB_SERVICE_HOST:$OVN_OVSDB_NB_SERVICE_PORT_OVSDB
+ovn_sb_connection=tcp:$OVN_OVSDB_SB_SERVICE_HOST:$OVN_OVSDB_SB_SERVICE_PORT_OVSDB
+EOF
+
+{{- if empty .Values.conf.ovn_bgp_agent.DEFAULT.bgp_router_id }}
+tee > /tmp/pod-shared/ovn-bgp-agent.ini << EOF
+[DEFAULT]
+bgp_router_id=$NODE_IP
+EOF
+{{- end }}
diff --git a/ovn/templates/bin/_ovn-bgp-agent.sh.tpl b/ovn/templates/bin/_ovn-bgp-agent.sh.tpl
new file mode 100644
index 00000000..143fc300
--- /dev/null
+++ b/ovn/templates/bin/_ovn-bgp-agent.sh.tpl
@@ -0,0 +1,24 @@
+#!/bin/bash
+
+{{/*
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+   http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/}}
+
+set -x
+
+exec ovn-bgp-agent \
+          --config-file /etc/ovn-bgp-agent/ovn-bgp-agent.conf \
+{{- if empty .Values.conf.ovn_bgp_agent.DEFAULT.bgp_router_id }}
+          --config-file /tmp/pod-shared/ovn-bgp-agent.ini \
+{{- end }}
+          --config-file /tmp/pod-shared/ovn.ini
diff --git a/ovn/templates/configmap-etc.yaml b/ovn/templates/configmap-etc.yaml
index 77547470..8512c614 100644
--- a/ovn/templates/configmap-etc.yaml
+++ b/ovn/templates/configmap-etc.yaml
@@ -23,6 +23,10 @@ limitations under the License.
 {{- $_ := set .Values.conf.ovn_network_logging_parser_uwsgi.uwsgi "http-socket" $http_socket -}}
 {{- end -}}
 
+{{- if empty $envAll.Values.conf.ovn_bgp_agent.frr_k8s.namespace -}}
+{{- $_ := set .Values.conf.ovn_bgp_agent.frr_k8s "namespace" $envAll.Release.Namespace -}}
+{{- end -}}
+
 ---
 apiVersion: v1
 kind: Secret
diff --git a/ovn/templates/configmap-bin.yaml b/ovn/templates/configmap-bin.yaml
index 77547470..8512c614 100644
--- a/ovn/templates/configmap-bin.yaml
+++ b/ovn/templates/configmap-bin.yaml
@@ -28,4 +28,8 @@ data:
 {{ tuple "bin/_ovn-controller-init.sh.tpl" . | include "helm-toolkit.utils.template" | indent 4 }}
   ovn-network-logging-parser.sh: |
 {{ tuple "bin/_ovn-network-logging-parser.sh.tpl" . | include "helm-toolkit.utils.template" | indent 4 }}
+  ovn-bgp-agent-init.sh: |
+{{ tuple "bin/_ovn-bgp-agent-init.sh.tpl" . | include "helm-toolkit.utils.template" | indent 4 }}
+  ovn-bgp-agent.sh: |
+{{ tuple "bin/_ovn-bgp-agent.sh.tpl" . | include "helm-toolkit.utils.template" | indent 4 }}
 {{- end }}
diff --git a/ovn/templates/configmap-etc.yaml b/ovn/templates/configmap-etc.yaml
index 0d221f19..eb6768e8 100644
--- a/ovn/templates/configmap-etc.yaml
+++ b/ovn/templates/configmap-etc.yaml
@@ -32,6 +32,13 @@ type: Opaque
 data:
   auto_bridge_add: {{ toJson $envAll.Values.conf.auto_bridge_add | b64enc }}
   neutron-ovn-network-logging-parser-uwsgi.ini: {{ include "helm-toolkit.utils.to_oslo_conf" .Values.conf.ovn_network_logging_parser_uwsgi | b64enc }}
+  ovn-bgp-agent.conf: {{ include "helm-toolkit.utils.to_oslo_conf" .Values.conf.ovn_bgp_agent | b64enc }}
+  ovn_bgp_agent_sudoers: {{ $envAll.Values.conf.ovn_bgp_agent_sudoers | b64enc }}
+  rootwrap.conf: {{ $envAll.Values.conf.rootwrap | b64enc }}
+{{- range $key, $value := $envAll.Values.conf.rootwrap_filters }}
+{{- $filePrefix := replace "_" "-"  $key }}
+  {{ printf "%s.filters" $filePrefix }}: {{ $value.content | b64enc }}
+{{- end }}
 {{- end }}
 {{- end }}
 
diff --git a/ovn/templates/daemonset-ovn-bgp-agent.yaml b/ovn/templates/daemonset-ovn-bgp-agent.yaml
new file mode 100644
index 00000000..7d1df245
--- /dev/null
+++ b/ovn/templates/daemonset-ovn-bgp-agent.yaml
@@ -0,0 +1,124 @@
+{{/*
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+   http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/}}
+
+{{- if .Values.manifests.daemonset_ovn_bgp_agent }}
+{{- $envAll := . }}
+
+{{- $configMapName := "ovn-etc" }}
+{{- $serviceAccountName := "ovn-bgp-agent" }}
+{{- $serviceAccountNamespace := $envAll.Release.Namespace }}
+{{ tuple $envAll "ovn_bgp_agent" $serviceAccountName | include "helm-toolkit.snippets.kubernetes_pod_rbac_serviceaccount" }}
+
+---
+kind: DaemonSet
+apiVersion: apps/v1
+metadata:
+  name: ovn-bgp-agent
+  annotations:
+    {{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" }}
+    configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
+  labels:
+{{ tuple $envAll "ovn" "ovn-bgp-agent" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 4 }}
+spec:
+  selector:
+    matchLabels:
+{{ tuple $envAll "ovn" "ovn-bgp-agent" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 6 }}
+  template:
+    metadata:
+      labels:
+{{ tuple $envAll "ovn" "ovn-bgp-agent" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
+      annotations:
+{{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" | indent 8 }}
+        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
+        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.utils.hash" }}
+    spec:
+      serviceAccountName: {{ $serviceAccountName }}
+      hostNetwork: true
+      hostPID: true
+      hostIPC: true
+      dnsPolicy: {{ .Values.pod.dns_policy }}
+      nodeSelector:
+        {{ .Values.labels.ovn_bgp_agent.node_selector_key }}: {{ .Values.labels.ovn_bgp_agent.node_selector_value }}
+      initContainers:
+        - name: ovn-bgp-agent-init
+{{ dict "envAll" $envAll "application" "ovn_bgp_agent" "container" "ovn_bgp_agent_init" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
+{{ tuple $envAll "ovn_bgp_agent" | include "helm-toolkit.snippets.image" | indent 10 }}
+          command:
+            - /tmp/ovn-bgp-agent-init.sh
+          env:
+            - name: NODE_IP
+              valueFrom:
+                fieldRef:
+                  fieldPath: status.podIP
+          volumeMounts:
+          - name: pod-tmp
+            mountPath: /tmp
+          - name: ovn-bin
+            mountPath: /tmp/ovn-bgp-agent-init.sh
+            subPath: ovn-bgp-agent-init.sh
+            readOnly: true
+      containers:
+        - name: ovn-bgp-agent
+{{ tuple $envAll "ovn_bgp_agent" | include "helm-toolkit.snippets.image" | indent 10 }}
+{{ tuple $envAll $envAll.Values.pod.resources.server | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
+{{ dict "envAll" $envAll "application" "ovn_bgp_agent" "container" "ovn_bgp_agent" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
+          command:
+            - /tmp/ovn-bgp-agent.sh
+          volumeMounts:
+            - name: run-openvswitch
+              mountPath: /run/openvswitch
+            - name: pod-tmp
+              mountPath: /tmp
+            - name: ovn-bin
+              mountPath: /tmp/ovn-bgp-agent.sh
+              subPath: ovn-bgp-agent.sh
+              readOnly: true
+            - name: ovn-etc
+              mountPath: /etc/ovn-bgp-agent/ovn-bgp-agent.conf
+              subPath: ovn-bgp-agent.conf
+              readOnly: true
+            - name: ovn-etc
+              mountPath: /etc/sudoers.d/kolla_ovn_bgp_agent_sudoers
+              subPath: ovn_bgp_agent_sudoers
+              readOnly: true
+            - name: ovn-etc
+              mountPath: /etc/ovn-bgp-agent/rootwrap.conf
+              subPath: rootwrap.conf
+              readOnly: true
+            {{- range $key, $value := $envAll.Values.conf.rootwrap_filters }}
+            {{- if ( has "ovn_bgp_agent" $value.pods ) }}
+            {{- $filePrefix := replace "_" "-"  $key }}
+            {{- $rootwrapFile := printf "/etc/ovn-bgp-agent/rootwrap.d/%s.filters" $filePrefix }}
+            - name: ovn-etc
+              mountPath: {{ $rootwrapFile }}
+              subPath: {{ base $rootwrapFile }}
+              readOnly: true
+            {{- end }}
+            {{- end }}
+      volumes:
+        - name: ovn-bin
+          configMap:
+            name: ovn-bin
+            defaultMode: 0777
+        - name: run-openvswitch
+          hostPath:
+            path: /run/openvswitch
+            type: DirectoryOrCreate
+        - name: ovn-etc
+          secret:
+            secretName: {{ $configMapName }}
+            defaultMode: 0444
+        - name: pod-tmp
+          emptyDir: {}
+{{- end }}
diff --git a/ovn/templates/role-ovn-bgp-agent.yaml b/ovn/templates/role-ovn-bgp-agent.yaml
new file mode 100644
index 00000000..524d1e38
--- /dev/null
+++ b/ovn/templates/role-ovn-bgp-agent.yaml
@@ -0,0 +1,18 @@
+apiVersion: rbac.authorization.k8s.io/v1
+kind: Role
+metadata:
+  name: ovn-bgp-agent
+  namespace: {{ .Release.Namespace }}
+rules:
+- apiGroups:
+  - frrk8s.metallb.io
+  resources:
+  - frrconfigurations
+  verbs:
+  - list
+  - get
+  - watch
+  - create
+  - update
+  - delete
+  - patch
diff --git a/ovn/templates/rolebinding-ovn-bgp-agent.yaml b/ovn/templates/rolebinding-ovn-bgp-agent.yaml
new file mode 100644
index 00000000..31a54842
--- /dev/null
+++ b/ovn/templates/rolebinding-ovn-bgp-agent.yaml
@@ -0,0 +1,13 @@
+apiVersion: rbac.authorization.k8s.io/v1
+kind: RoleBinding
+metadata:
+  name: ovn-bgp-agent
+  namespace: {{ .Release.Namespace }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: Role
+  name: ovn-bgp-agent
+subjects:
+- kind: ServiceAccount
+  name: ovn-bgp-agent
+  namespace: {{ .Release.Namespace }}
diff --git a/ovn/values.yaml b/ovn/values.yaml
index 0191c850..964e9d8a 100644
--- a/ovn/values.yaml
+++ b/ovn/values.yaml
@@ -29,6 +29,7 @@ images:
     image_repo_sync: docker.io/library/docker:17.07.0
     vector: docker.io/timberio/vector:0.39.0-debian
     ovn_logging_parser: docker.io/openstackhelm/neutron:2024.1-ubuntu_jammy
+    ovn_bgp_agent: docker.io/openstackhelm/neutron:2024.1-ubuntu_jammy
   pull_policy: "IfNotPresent"
   local_registry:
     active: false
@@ -52,6 +53,9 @@ labels:
   ovn_controller_gw:
     node_selector_key: l3-agent
     node_selector_value: enabled
+  ovn_bgp_agent:
+    node_selector_key: openvswitch
+    node_selector_value: enabled
 
 volume:
   ovn_ovsdb_nb:
@@ -133,6 +137,65 @@ conf:
     endpoint = "http://loki.monitoring:3100"
     encoding.codec = "json"
     tenant_id = "{{`{{ project_id }}`}}"
+  ovn_bgp_agent:
+    DEFAULT:
+      ovsdb_connection: unix:/run/openvswitch/db.sock
+    agent:
+      root_helper: sudo /var/lib/openstack/bin/ovn-bgp-agent-rootwrap /etc/ovn-bgp-agent/rootwrap.conf
+      root_helper_daemon: sudo /var/lib/openstack/bin/ovn-bgp-agent-rootwrap-daemon /etc/ovn-bgp-agent/rootwrap.conf
+    frr_k8s: {}
+  ovn_bgp_agent_sudoers: |
+    # This sudoers file supports rootwrap for both Kolla and LOCI Images.
+    Defaults !requiretty
+    Defaults secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/var/lib/openstack/bin:/var/lib/kolla/venv/bin"
+    ovn_bgp_agent ALL = (root) NOPASSWD: /var/lib/kolla/venv/bin/ovn-bgp-agent-rootwrap /etc/ovn-bgp-agent/rootwrap.conf *, /var/lib/openstack/bin/ovn-bgp-agent-rootwrap /etc/ovn-bgp-agent/rootwrap.conf *
+    ovn_bgp_agent ALL = (root) NOPASSWD: /var/lib/kolla/venv/bin/ovn-bgp-agent-rootwrap-daemon /etc/ovn-bgp-agent/rootwrap.conf, /var/lib/openstack/bin/ovn-bgp-agent-rootwrap-daemon /etc/ovn-bgp-aegnt/rootwrap.conf
+  rootwrap: |
+    # Configuration for ovn-bgp-agent-rootwrap
+    # This file should be owned by (and only-writeable by) the root user
+
+    [DEFAULT]
+    # List of directories to load filter definitions from (separated by ',').
+    # These directories MUST all be only writeable by root !
+    filters_path=/etc/ovn-bgp-agent/rootwrap.d,/usr/share/ovn-bgp-agent/rootwrap
+
+    # List of directories to search executables in, in case filters do not
+    # explicitely specify a full path (separated by ',')
+    # If not specified, defaults to system PATH environment variable.
+    # These directories MUST all be only writeable by root !
+    exec_dirs=/sbin,/usr/sbin,/bin,/usr/bin,/usr/local/bin,/usr/local/sbin,/var/lib/openstack/bin,/var/lib/kolla/venv/bin
+
+    # Enable logging to syslog
+    # Default value is False
+    use_syslog=False
+
+    # Which syslog facility to use.
+    # Valid values include auth, authpriv, syslog, local0, local1...
+    # Default value is 'syslog'
+    syslog_log_facility=syslog
+
+    # Which messages to log.
+    # INFO means log all usage
+    # ERROR means only log unsuccessful attempts
+    syslog_log_level=ERROR
+  rootwrap_filters:
+    ovn_bgp_agent:
+      pods:
+        - ovn_bgp_agent
+      content: |
+        # ovn-bgp-agent-rootwrap command filters for scripts
+        # This file should be owned by (and only-writable by) the root user
+
+        [Filters]
+        # privileged/__init__.py: priv_context.PrivContext(default)
+        # This line ties the superuser privs with the config files, context name,
+        # and (implicitly) the actual python code invoked.
+        privsep-rootwrap: RegExpFilter, privsep-helper, root, privsep-helper, --config-file, /etc/(?!\.\.).*, --privsep_context, ovn_bgp_agent.privileged.default, --privsep_sock_path, /tmp/.*
+
+        ovs-vsctl: CommandFilter, ovs-vsctl, root
+        sysctl: CommandFilter, sysctl, root
+        ip: IpFilter, ip, root
+        vtysh: CommandFilter, vtysh, root
 
 pod:
   # NOTE: should be same as nova.pod.use_fqdn.compute
@@ -159,6 +221,13 @@ pod:
         vector:
           allowPrivilegeEscalation: false
           readOnlyRootFilesystem: true
+    ovn_bgp_agent:
+      container:
+        ovn_bgp_agent_init:
+          readOnlyRootFilesystem: true
+          privileged: true
+        ovn_bgp_agent:
+          privileged: true
   tolerations:
     ovn_ovsdb_nb:
       enabled: false
@@ -440,4 +509,5 @@ manifests:
   deployment_ovn_northd: true
   daemonset_ovn_controller: true
   job_image_repo_sync: true
+  daemonset_ovn_bgp_agent: true
 ...
