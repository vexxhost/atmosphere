diff --git a/ovn/templates/bin/_ovn-bgp-agent-init.sh.tpl b/ovn/templates/bin/_ovn-bgp-agent-init.sh.tpl
new file mode 100644
index 00000000..b8a0a788
--- /dev/null
+++ b/ovn/templates/bin/_ovn-bgp-agent-init.sh.tpl
@@ -0,0 +1,25 @@
+#!/bin/bash
+
+{{/*
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+   http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/}}
+
+set -ex
+
+# See: https://bugs.launchpad.net/neutron/+bug/2028442
+mkdir -p /tmp/pod-shared
+tee > /tmp/pod-shared/ovn.ini << EOF
+[ovn]
+ovn_nb_connection=tcp:$OVN_OVSDB_NB_SERVICE_HOST:$OVN_OVSDB_NB_SERVICE_PORT_OVSDB
+ovn_sb_connection=tcp:$OVN_OVSDB_SB_SERVICE_HOST:$OVN_OVSDB_SB_SERVICE_PORT_OVSDB
+EOF
diff --git a/ovn/templates/bin/_ovn-bgp-agent.sh.tpl b/ovn/templates/bin/_ovn-bgp-agent.sh.tpl
new file mode 100644
index 00000000..40519084
--- /dev/null
+++ b/ovn/templates/bin/_ovn-bgp-agent.sh.tpl
@@ -0,0 +1,21 @@
+#!/bin/bash
+
+{{/*
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+   http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/}}
+
+set -x
+
+exec ovn-bgp-agent \
+          --config-file /etc/ovn-bgp-agent/ovn-bgp-agent.conf \
+          --config-file /tmp/pod-shared/ovn.ini
diff --git a/ovn/templates/clusterrole-ovn-bgp-agent.yaml b/ovn/templates/clusterrole-ovn-bgp-agent.yaml
new file mode 100644
index 00000000..f7493228
--- /dev/null
+++ b/ovn/templates/clusterrole-ovn-bgp-agent.yaml
@@ -0,0 +1,17 @@
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: ovn-bgp-agent
+rules:
+- apiGroups:
+  - frrk8s.metallb.io
+  resources:
+  - frrconfigurations
+  verbs:
+  - list
+  - get
+  - watch
+  - create
+  - update
+  - delete
+  - patch
diff --git a/ovn/templates/clusterrolebinding-ovn-bgp-agent.yaml b/ovn/templates/clusterrolebinding-ovn-bgp-agent.yaml
new file mode 100644
index 00000000..43a4ae5b
--- /dev/null
+++ b/ovn/templates/clusterrolebinding-ovn-bgp-agent.yaml
@@ -0,0 +1,12 @@
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: ovn-bgp-agent
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: ovn-bgp-agent
+subjects:
+- kind: ServiceAccount
+  name: ovn-bgp-agent
+  namespace: {{ .Release.Namespace }}
diff --git a/ovn/templates/configmap-bin.yaml b/ovn/templates/configmap-bin.yaml
index 77547470..8512c614 100644
--- a/ovn/templates/configmap-bin.yaml
+++ b/ovn/templates/configmap-bin.yaml
@@ -28,4 +28,8 @@ data:
 {{ tuple "bin/_ovn-controller-init.sh.tpl" . | include "helm-toolkit.utils.template" | indent 4 }}
   ovn-network-logging-parser.sh: |
 {{ tuple "bin/_ovn-network-logging-parser.sh.tpl" . | include "helm-toolkit.utils.template" | indent 4 }}
+  ovn-bgp-agent-init.sh: |
+{{ tuple "bin/_ovn-bgp-agent-init.sh.tpl" . | include "helm-toolkit.utils.template" | indent 4 }}
+  ovn-bgp-agent.sh: |
+{{ tuple "bin/_ovn-bgp-agent.sh.tpl" . | include "helm-toolkit.utils.template" | indent 4 }}
 {{- end }}
diff --git a/ovn/templates/configmap-etc.yaml b/ovn/templates/configmap-etc.yaml
index 0d221f19..cfdac8ee 100644
--- a/ovn/templates/configmap-etc.yaml
+++ b/ovn/templates/configmap-etc.yaml
@@ -32,6 +32,8 @@ type: Opaque
 data:
   auto_bridge_add: {{ toJson $envAll.Values.conf.auto_bridge_add | b64enc }}
   neutron-ovn-network-logging-parser-uwsgi.ini: {{ include "helm-toolkit.utils.to_oslo_conf" .Values.conf.ovn_network_logging_parser_uwsgi | b64enc }}
+  ovn-bgp-agent.conf: {{ include "helm-toolkit.utils.to_oslo_conf" .Values.conf.ovn_bgp_agent | b64enc }}
+  rootwrap.conf: {{ $envAll.Values.conf.rootwrap | b64enc }}
 {{- end }}
 {{- end }}
 
diff --git a/ovn/templates/daemonset-ovn-bgp-agent.yaml b/ovn/templates/daemonset-ovn-bgp-agent.yaml
new file mode 100644
index 00000000..78e9960a
--- /dev/null
+++ b/ovn/templates/daemonset-ovn-bgp-agent.yaml
@@ -0,0 +1,131 @@
+{{/*
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+   http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/}}
+
+{{- if .Values.manifests.daemonset_ovn_bgp_agent }}
+{{- $envAll := . }}
+
+{{- $configMapName := "ovn-etc" }}
+{{- $serviceAccountName := "ovn-bgp-agent" }}
+{{- $serviceAccountNamespace := $envAll.Release.Namespace }}
+{{ tuple $envAll "ovn_bgp_agent" $serviceAccountName | include "helm-toolkit.snippets.kubernetes_pod_rbac_serviceaccount" }}
+
+---
+kind: DaemonSet
+apiVersion: apps/v1
+metadata:
+  name: ovn-bgp-agent
+  annotations:
+    {{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" }}
+    configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
+  labels:
+{{ tuple $envAll "ovn" "ovn-bgp-agent" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 4 }}
+spec:
+  selector:
+    matchLabels:
+{{ tuple $envAll "ovn" "ovn-bgp-agent" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 6 }}
+  template:
+    metadata:
+      labels:
+{{ tuple $envAll "ovn" "ovn-bgp-agent" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
+      annotations:
+{{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" | indent 8 }}
+        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
+        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.utils.hash" }}
+    spec:
+      serviceAccountName: {{ $serviceAccountName }}
+      hostNetwork: true
+      hostPID: true
+      hostIPC: true
+      dnsPolicy: {{ .Values.pod.dns_policy }}
+      nodeSelector:
+        {{ .Values.labels.ovn_bgp_agent.node_selector_key }}: {{ .Values.labels.ovn_bgp_agent.node_selector_value }}
+      initContainers:
+        - name: ovn-bgp-agent-init
+{{ dict "envAll" $envAll "application" "ovn_bgp_agent" "container" "controller_init" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
+{{ tuple $envAll "ovn_bgp_agent" | include "helm-toolkit.snippets.image" | indent 10 }}
+          command:
+            - /tmp/ovn-bgp-agent-init.sh
+          env:
+            - name: NODE_NAME
+              valueFrom:
+                fieldRef:
+                  fieldPath: spec.nodeName
+          volumeMounts:
+          - mountPath: /tmp
+            name: pod-tmp
+          - mountPath: /tmp/ovn-bgp-agent-init.sh
+            name: ovn-bin
+            readOnly: true
+            subPath: ovn-bgp-agent-init.sh
+      containers:
+        - name: ovn-bgp-agent
+{{ tuple $envAll "ovn_bgp_agent" | include "helm-toolkit.snippets.image" | indent 10 }}
+{{ tuple $envAll $envAll.Values.pod.resources.server | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
+{{ dict "envAll" $envAll "application" "ovn_controller" "container" "controller" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
+          command:
+            - /tmp/ovn-bgp-agent.sh
+          env:
+            - name: OVN_KUBERNETES_NAMESPACE
+              valueFrom:
+                fieldRef:
+                  fieldPath: metadata.namespace
+            - name: OVN_SB_DB
+              value: ovn-ovsdb-sb
+            - name: OVN_NB_DB
+              value: ovn-ovsdb-nb
+          volumeMounts:
+            - name: run-openvswitch
+              mountPath: /run/openvswitch
+            - name: logs
+              mountPath: /var/log/ovn
+            - name: run-openvswitch
+              mountPath: /run/ovn
+            - mountPath: /tmp
+              name: pod-tmp
+            - mountPath: /tmp/ovn-bgp-agent.sh
+              name: ovn-bin
+              readOnly: true
+              subPath: ovn-bgp-agent.sh
+            - mountPath: /etc/ovn-bgp-agent/ovn-bgp-agent.conf
+              name: ovn-etc
+              readOnly: true
+              subPath: ovn-bgp-agent.conf
+            - mountPath: /etc/ovn-bgp-agent/rootwrap.conf
+              name: ovn-etc
+              readOnly: true
+              subPath: rootwrap.conf
+      volumes:
+        - name: ovn-bin
+          configMap:
+            name: ovn-bin
+            defaultMode: 0777
+        - name: run-openvswitch
+          hostPath:
+            path: /run/openvswitch
+            type: DirectoryOrCreate
+        - name: ovn-etc
+          secret:
+            secretName: {{ $configMapName }}
+            defaultMode: 0444
+        - name: logs
+          hostPath:
+            path: /var/log/ovn
+            type: DirectoryOrCreate
+        - name: run-ovn
+          hostPath:
+            path: /run/ovn
+            type: DirectoryOrCreate
+        - emptyDir: {}
+          name: pod-tmp
+{{- end }}
diff --git a/ovn/values.yaml b/ovn/values.yaml
index 0191c850..0d3a0a9c 100644
--- a/ovn/values.yaml
+++ b/ovn/values.yaml
@@ -52,6 +52,9 @@ labels:
   ovn_controller_gw:
     node_selector_key: l3-agent
     node_selector_value: enabled
+  ovn_bgp_agent:
+    node_selector_key: openvswitch
+    node_selector_value: enabled
 
 volume:
   ovn_ovsdb_nb:
@@ -133,6 +136,64 @@ conf:
     endpoint = "http://loki.monitoring:3100"
     encoding.codec = "json"
     tenant_id = "{{`{{ project_id }}`}}"
+  ovn_bgp_agent:
+    DEFAULT:
+      debug: False
+      reconcile_interval: 120
+      expose_tenant_networks: True
+      driver: ovn_bgp_driver
+      frr_driver: frr_k8s
+      ovsdb_connection: unix:/run/openvswitch/db.sock
+    agent:
+      root_helper: sudo /var/lib/openstack/bin/ovn-bgp-agent-rootwrap /etc/ovn-bgp-agent/rootwrap.conf
+      root_helper_daemon: sudo /var/lib/openstack/bin/ovn-bgp-agent-rootwrap-daemon /etc/ovn-bgp-agent/rootwrap.conf
+    frr_k8s:
+      node_to_config: testnodename
+      peer_address: 10.2.2.254:179
+      source_address: 10.1.1.254
+      my_asn: 100
+      router_id: 10.1.1.254
+      peer_asn: 100
+      hold_time: 1s
+      keep_alive_time: 1s
+      password: password
+      ebgp_multi_hop: False
+      vrf_name: fake-vrf
+  rootwrap: |
+    # Configuration for neutron-rootwrap
+    # This file should be owned by (and only-writeable by) the root user
+
+    [DEFAULT]
+    # List of directories to load filter definitions from (separated by ',').
+    # These directories MUST all be only writeable by root !
+    filters_path=/etc/neutron/rootwrap.d,/usr/share/neutron/rootwrap,/var/lib/openstack/etc/neutron/rootwrap.d
+
+    # List of directories to search executables in, in case filters do not
+    # explicitely specify a full path (separated by ',')
+    # If not specified, defaults to system PATH environment variable.
+    # These directories MUST all be only writeable by root !
+    exec_dirs=/sbin,/usr/sbin,/bin,/usr/bin,/usr/local/bin,/usr/local/sbin,/var/lib/openstack/bin,/var/lib/kolla/venv/bin
+
+    # Enable logging to syslog
+    # Default value is False
+    use_syslog=False
+
+    # Which syslog facility to use.
+    # Valid values include auth, authpriv, syslog, local0, local1...
+    # Default value is 'syslog'
+    syslog_log_facility=syslog
+
+    # Which messages to log.
+    # INFO means log all usage
+    # ERROR means only log unsuccessful attempts
+    syslog_log_level=ERROR
+
+    [xenapi]
+    # XenAPI configuration is only required by the L2 agent if it is to
+    # target a XenServer/XCP compute host's dom0.
+    xenapi_connection_url=<None>
+    xenapi_connection_username=root
+    xenapi_connection_password=<None>
 
 pod:
   # NOTE: should be same as nova.pod.use_fqdn.compute
@@ -440,4 +501,5 @@ manifests:
   deployment_ovn_northd: true
   daemonset_ovn_controller: true
   job_image_repo_sync: true
+  daemonset_ovn_bgp_agent: true
 ...
