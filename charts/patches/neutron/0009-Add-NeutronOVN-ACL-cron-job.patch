From d2606105c5d730bf6315568465022965b0fb4281 Mon Sep 17 00:00:00 2001
From: ricolin <rlin@vexxhost.com>
Date: Thu, 18 Sep 2025 17:28:08 +0800
Subject: [PATCH] Add neutron acl sync cron job

A refect version of https://review.opendev.org/c/openstack/openstack-helm/+/948992

Change-Id: I6b81b96cdd0159b42068e0e5507c12fe3ecb9f04
Signed-off-by: ricolin <rlin@vexxhost.com>

Change-Id: If5c1e0b6cb18b0930a787e4a49423f70b1fc99c8
Signed-off-by: ricolin <rlin@vexxhost.com>
---
diff --git a/neutron/templates/bin/_neutron-ovn-db-sync.sh.tpl b/neutron/templates/bin/_neutron-ovn-db-sync.sh.tpl
new file mode 100644
index 00000000..f945ebdd
--- /dev/null
+++ b/neutron/templates/bin/_neutron-ovn-db-sync.sh.tpl
@@ -0,0 +1,38 @@
+#!/bin/bash
+
+{{/*
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+   http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/}}
+
+set -ex
+
+neutron-ovn-db-sync-util \
+        --config-file /etc/neutron/neutron.conf \
+{{- if ( has "ovn" .Values.network.backend ) }}
+        --config-file /tmp/pod-shared/ovn.ini \
+{{- end }}
+{{- if .Values.conf.plugins.taas.taas.enabled }}
+        --config-file /etc/neutron/taas_plugin.ini \
+{{- end }}
+{{- if ( has "sriov" .Values.network.backend ) }}
+        --config-file /etc/neutron/plugins/ml2/sriov_agent.ini \
+{{- end }}
+{{- if .Values.conf.plugins.l2gateway }}
+        --config-file /etc/neutron/l2gw_plugin.ini \
+{{- end }}
+{{- if ( has "tungstenfabric" .Values.network.backend ) }}
+        --config-file /etc/neutron/plugins/tungstenfabric/tf_plugin.ini \
+{{- else }}
+        --config-file /etc/neutron/plugins/ml2/ml2_conf.ini \
+{{- end }}
+        --ovn-neutron_sync_mode "$1"
diff --git a/neutron/templates/configmap-bin.yaml b/neutron/templates/configmap-bin.yaml
index 87b2b798..3922f60f 100644
--- a/neutron/templates/configmap-bin.yaml
+++ b/neutron/templates/configmap-bin.yaml
@@ -109,6 +109,8 @@ data:
   neutron-metadata-agent-init.sh: |
 {{ tuple "bin/_neutron-metadata-agent-init.sh.tpl" . | include "helm-toolkit.utils.template" | indent 4 }}
 {{- if ( has "ovn" .Values.network.backend ) }}
+  neutron-ovn-db-sync.sh: |
+{{ tuple "bin/_neutron-ovn-db-sync.sh.tpl" . | include "helm-toolkit.utils.template" | indent 4 }}
   neutron-ovn-metadata-agent.sh: |
 {{ tuple "bin/_neutron-ovn-metadata-agent.sh.tpl" . | include "helm-toolkit.utils.template" | indent 4 }}
   neutron-ovn-init.sh: |
diff --git a/neutron/templates/cron-job-ovn-db-sync.yaml b/neutron/templates/cron-job-ovn-db-sync.yaml
new file mode 100644
index 00000000..636aa8bf
--- /dev/null
+++ b/neutron/templates/cron-job-ovn-db-sync.yaml
@@ -0,0 +1,180 @@
+{{/*
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+   http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/}}
+
+{{- if .Values.manifests.cron_job_ovn_db_sync }}
+{{- $envAll := . }}
+
+{{- $mounts_neutron_ovn_db_sync := .Values.pod.mounts.neutron_ovn_db_sync.neutron_ovn_db_sync }}
+{{- $mounts_neutron_ovn_db_sync_init := .Values.pod.mounts.neutron_ovn_db_sync.init_container }}
+
+{{- $serviceAccountName := "neutron-ovn-db-sync" }}
+{{ tuple $envAll "pod_dependency" $serviceAccountName | include "helm-toolkit.snippets.kubernetes_pod_rbac_serviceaccount" }}
+---
+apiVersion: batch/v1
+kind: CronJob
+metadata:
+  name: neutron-ovn-db-sync
+  annotations:
+    {{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" }}
+spec:
+  schedule: {{ .Values.jobs.ovn_db_sync.cron | quote }}
+  successfulJobsHistoryLimit: {{ .Values.jobs.ovn_db_sync.history.success }}
+  failedJobsHistoryLimit: {{ .Values.jobs.ovn_db_sync.history.failed }}
+  concurrencyPolicy: Forbid
+  jobTemplate:
+    metadata:
+      labels:
+{{ tuple $envAll "neutron" "ovn-db-sync" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
+      annotations:
+{{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" | indent 8 }}
+        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
+        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.utils.hash" }}
+{{ dict "envAll" $envAll "podName" "neutron-ovn-db-sync" "containerNames" (list "init" "neutron-ovn-db-sync" ) | include "helm-toolkit.snippets.kubernetes_mandatory_access_control_annotation" | indent 8 }}
+    spec:
+      template:
+        metadata:
+          labels:
+{{ tuple $envAll "neutron" "ovn-db-sync" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 12 }}
+          annotations:
+{{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" | indent 12 }}
+{{ dict "envAll" $envAll "podName" "neutron-ovn-db-sync" "containerNames" (list "init" "neutron-ovn-db-sync" ) | include "helm-toolkit.snippets.kubernetes_mandatory_access_control_annotation" | indent 8 }}
+        spec:
+{{ tuple "neutron_ovn_db_sync" . | include "helm-toolkit.snippets.kubernetes_pod_priority_class" | indent 6 }}
+{{ tuple "neutron_ovn_db_sync" . | include "helm-toolkit.snippets.kubernetes_pod_runtime_class" | indent 6 }}
+          serviceAccountName: {{ $serviceAccountName }}
+          restartPolicy: OnFailure
+{{ if $envAll.Values.pod.tolerations.neutron.enabled }}
+{{ tuple $envAll "neutron" | include "helm-toolkit.snippets.kubernetes_tolerations" | indent 10 }}
+{{ end }}
+          nodeSelector:
+            {{ .Values.labels.job.node_selector_key }}: {{ .Values.labels.job.node_selector_value }}
+          initContainers:
+{{ tuple $envAll "ovn_db_sync" $mounts_neutron_ovn_db_sync_init | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 12 }}
+            - name: ovn-neutron-init
+{{ tuple $envAll "neutron_ovn_db_sync" | include "helm-toolkit.snippets.image" | indent 14 }}
+              command:
+                - /tmp/neutron-ovn-init.sh
+              volumeMounts:
+                - name: pod-shared
+                  mountPath: /tmp/pod-shared
+                - name: neutron-bin
+                  mountPath: /tmp/neutron-ovn-init.sh
+                  subPath: neutron-ovn-init.sh
+                  readOnly: true
+          containers:
+            - name: neutron-ovn-db-sync
+{{ tuple $envAll "neutron_ovn_db_sync" | include "helm-toolkit.snippets.image" | indent 14 }}
+{{ tuple $envAll $envAll.Values.pod.resources.jobs.ovn_db_sync | include "helm-toolkit.snippets.kubernetes_resources" | indent 14 }}
+{{- if or .Values.manifests.certificates .Values.tls.identity }}
+              env:
+                - name: REQUESTS_CA_BUNDLE
+                  value: "/etc/neutron/certs/ca.crt"
+{{- end }}
+              command:
+                - /tmp/neutron-ovn-db-sync.sh
+                - {{ quote .Values.jobs.ovn_db_sync.sync_mode }}
+              volumeMounts:
+                - name: neutron-bin
+                  mountPath: /tmp/neutron-ovn-db-sync.sh
+                  subPath: neutron-ovn-db-sync.sh
+                  readOnly: true
+                - name: pod-tmp
+                  mountPath: /tmp
+                - name: pod-shared
+                  mountPath: /tmp/pod-shared
+                - name: pod-var-neutron
+                  mountPath: {{ .Values.conf.neutron.DEFAULT.state_path }}
+                - name: neutron-etc
+                  mountPath: /etc/neutron/neutron.conf
+                  subPath: neutron.conf
+                  readOnly: true
+                {{- if( has "tungstenfabric" .Values.network.backend ) }}
+                - name: neutron-etc
+                  mountPath: /etc/neutron/plugins/tungstenfabric/tf_plugin.ini
+                  subPath: tf_plugin.ini
+                  readOnly: true
+                - name: neutron-etc
+                  mountPath: /etc/contrail/vnc_api_lib.ini
+                  subPath: vnc_api_lib.ini
+                  readOnly: true
+                - name: neutron-plugin-shared
+                  mountPath: /opt/plugin
+                - name: neutron-bin
+                  mountPath: /usr/local/lib/python2.7/site-packages/tf-plugin.pth
+                  subPath: tf-plugin.pth
+                  readOnly: true
+                - name: neutron-bin
+                  mountPath: /var/lib/openstack/lib/python2.7/site-packages/tf-plugin.pth
+                  subPath: tf-plugin.pth
+                  readOnly: true
+                - name: neutron-bin
+                  mountPath: /var/lib/openstack/lib/python3.6/site-packages/tf-plugin.pth
+                  subPath: tf-plugin.pth
+                  readOnly: true
+                {{- else }}
+                - name: neutron-etc
+                  mountPath: /etc/neutron/plugins/ml2/ml2_conf.ini
+                  subPath: ml2_conf.ini
+                  readOnly: true
+                {{- end }}
+                {{ if ( has "sriov" .Values.network.backend ) }}
+                - name: neutron-etc
+                  mountPath: /etc/neutron/plugins/ml2/sriov_agent.ini
+                  subPath: sriov_agent.ini
+                  readOnly: true
+                {{ end }}
+                {{- if .Values.conf.plugins.taas.taas.enabled }}
+                - name: neutron-etc
+                  mountPath: /etc/neutron/taas_plugin.ini
+                  subPath: taas_plugin.ini
+                  readOnly: true
+                {{ end }}
+                {{- if .Values.conf.plugins.l2gateway }}
+                - name: neutron-etc
+                  mountPath: /etc/neutron/l2gw_plugin.ini
+                  subPath: l2gw_plugin.ini
+                  readOnly: true
+                {{ end }}
+{{- dict "enabled" .Values.manifests.certificates "name" .Values.endpoints.oslo_db.auth.admin.secret.tls.internal "path" "/etc/mysql/certs" | include "helm-toolkit.snippets.tls_volume_mount" | indent 16 }}
+{{- dict "enabled" (or .Values.manifests.certificates .Values.tls.identity) "name" .Values.secrets.tls.network.server.internal "path" "/etc/neutron/certs" | include "helm-toolkit.snippets.tls_volume_mount" | indent 16 }}
+{{- dict "enabled" $envAll.Values.manifests.certificates "name" $envAll.Values.endpoints.oslo_messaging.auth.admin.secret.tls.internal "path" "/etc/rabbitmq/certs" | include "helm-toolkit.snippets.tls_volume_mount" | indent 16 }}
+{{ if $mounts_neutron_ovn_db_sync.volumeMounts }}{{ toYaml $mounts_neutron_ovn_db_sync.volumeMounts | indent 14 }}{{ end }}
+          volumes:
+            - name: pod-tmp
+              emptyDir: {}
+            - name: pod-shared
+              emptyDir: {}
+            {{- if .Values.manifests.certificates }}
+            - name: wsgi-neutron
+              emptyDir: {}
+            {{- end }}
+            - name: pod-var-neutron
+              emptyDir: {}
+            - name: neutron-bin
+              configMap:
+                name: neutron-bin
+                defaultMode: 0555
+            - name: neutron-etc
+              secret:
+                secretName: neutron-etc
+                defaultMode: 0444
+            {{- if ( has "tungstenfabric" .Values.network.backend ) }}
+            - name: neutron-plugin-shared
+              emptyDir: {}
+            {{- end }}
+{{- dict "enabled" .Values.manifests.certificates "name" .Values.endpoints.oslo_db.auth.admin.secret.tls.internal | include "helm-toolkit.snippets.tls_volume" | indent 12 }}
+{{- dict "enabled" (or .Values.manifests.certificates .Values.tls.identity) "name" .Values.secrets.tls.network.server.internal | include "helm-toolkit.snippets.tls_volume" | indent 12 }}
+{{- dict "enabled" $envAll.Values.manifests.certificates "name" $envAll.Values.endpoints.oslo_messaging.auth.admin.secret.tls.internal | include "helm-toolkit.snippets.tls_volume" | indent 12 }}
+{{ if $mounts_neutron_ovn_db_sync.volumes }}{{ toYaml $mounts_neutron_ovn_db_sync.volumes | indent 12 }}{{ end }}
+{{- end }}
diff --git a/neutron/values.yaml b/neutron/values.yaml
index 83e34c08..76f6bccd 100644
--- a/neutron/values.yaml
+++ b/neutron/values.yaml
@@ -37,6 +37,7 @@ images:
     neutron_dhcp: docker.io/openstackhelm/neutron:2024.1-ubuntu_jammy
     neutron_metadata: docker.io/openstackhelm/neutron:2024.1-ubuntu_jammy
     neutron_ovn_metadata: docker.io/openstackhelm/neutron:2024.1-ubuntu_jammy
+    neutron_ovn_db_sync: docker.io/openstackhelm/neutron:2024.1-ubuntu_jammy
     neutron_ovn_vpn: docker.io/openstackhelm/neutron:2024.1-ubuntu_jammy
     neutron_l3: docker.io/openstackhelm/neutron:2024.1-ubuntu_jammy
     neutron_l2gw: docker.io/openstackhelm/neutron:2024.1-ubuntu_jammy
@@ -737,6 +738,11 @@ pod:
       neutron_lb_agent:
         volumeMounts:
         volumes:
+    neutron_ovn_db_sync:
+      init_container: null
+      neutron_ovn_db_sync:
+        volumeMounts:
+        volumes:
     neutron_metadata_agent:
       init_container: null
       neutron_metadata_agent:
@@ -1030,6 +1036,13 @@ pod:
         limits:
           memory: "1024Mi"
           cpu: "2000m"
+      ovn_db_sync:
+        requests:
+          memory: "128Mi"
+          cpu: "100m"
+        limits:
+          memory: "1024Mi"
+          cpu: "2000m"
       tests:
         requests:
           memory: "128Mi"
@@ -2674,6 +2687,14 @@ health_probe:
   logging:
     level: ERROR
 
+jobs:
+  ovn_db_sync:
+    cron: "*/5 * * * *"
+    sync_mode: log
+    history:
+      success: 3
+      failed: 1
+
 tls:
   identity: false
   oslo_messaging: false
@@ -2683,6 +2704,7 @@ manifests:
   certificates: false
   configmap_bin: true
   configmap_etc: true
+  cron_job_ovn_db_sync: false
   daemonset_dhcp_agent: true
   daemonset_l3_agent: true
   daemonset_lb_agent: true
-- 
2.25.1
