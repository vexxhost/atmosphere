{{/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

{{- if and .Values.manifests.job_storage_init .Values.conf.ceph.enabled }}
{{- $envAll := . }}

{{- $serviceAccountName := "nova-storage-init" }}
{{ tuple $envAll "storage_init" $serviceAccountName | include "helm-toolkit.snippets.kubernetes_pod_rbac_serviceaccount" }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ $serviceAccountName }}
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - create
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ $serviceAccountName }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $serviceAccountName }}
subjects:
  - kind: ServiceAccount
    name: {{ $serviceAccountName }}
    namespace: {{ $envAll.Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
{{- if .Values.helm3_hook }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "-6"
{{- end }}
  name: nova-storage-init
  labels:
{{ tuple $envAll "nova" "storage-init" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 4 }}
spec:
  template:
    metadata:
      labels:
{{ tuple $envAll "nova" "storage-init" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
    spec:
      serviceAccountName: {{ $serviceAccountName }}
{{ dict "envAll" $envAll "application" "nova" | include "helm-toolkit.snippets.kubernetes_pod_security_context" | indent 6 }}
      restartPolicy: OnFailure
{{ if $envAll.Values.pod.tolerations.nova.enabled }}
{{ tuple $envAll "nova" | include "helm-toolkit.snippets.kubernetes_tolerations" | indent 6 }}
{{ end }}
      nodeSelector:
        {{ .Values.labels.job.node_selector_key }}: {{ .Values.labels.job.node_selector_value }}
      initContainers:
{{ tuple $envAll "storage_init" list | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 8 }}
        {{- if $envAll.Values.conf.ceph.enabled }}
        - name: ceph-keyring-placement
{{ tuple $envAll "nova_storage_init" | include "helm-toolkit.snippets.image" | indent 10 }}
          securityContext:
            runAsUser: 0
          command:
            - /tmp/ceph-admin-keyring.sh
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: etcceph
              mountPath: /etc/ceph
            - name: nova-bin
              mountPath: /tmp/ceph-admin-keyring.sh
              subPath: ceph-admin-keyring.sh
              readOnly: true
            {{- if empty .Values.conf.ceph.admin_keyring }}
            - name: ceph-keyring
              mountPath: /tmp/client-keyring
              subPath: key
              readOnly: true
            {{ end }}
        {{ end }}
      containers:
        - name: nova-storage-init
{{ tuple $envAll "nova_storage_init" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.jobs.storage_init | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: STORAGE_BACKEND
              value: {{ .Values.conf.nova.libvirt.images_type | quote }}
            {{- if eq .Values.conf.nova.libvirt.images_type "rbd" }}
            - name: RBD_POOL_NAME
              value: {{ .Values.conf.nova.libvirt.images_rbd_pool | quote }}
            - name: RBD_POOL_APP_NAME
              value: {{ .Values.rbd_pool.app_name | quote }}
            - name: RBD_POOL_USER
              value: {{ .Values.conf.nova.libvirt.rbd_user | quote }}
            - name: RBD_POOL_CRUSH_RULE
              value: {{ .Values.rbd_pool.crush_rule | quote }}
            - name: RBD_POOL_REPLICATION
              value: {{ .Values.rbd_pool.replication | quote }}
            - name: RBD_POOL_CHUNK_SIZE
              value: {{ .Values.rbd_pool.chunk_size | quote }}
            {{ end }}
          command:
            - /tmp/storage-init.sh
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: nova-bin
              mountPath: /tmp/storage-init.sh
              subPath: storage-init.sh
              readOnly: true
            {{- if eq .Values.conf.nova.libvirt.images_type "rbd" }}
            - name: etcceph
              mountPath: /etc/ceph
            - name: ceph-etc
              mountPath: /etc/ceph/ceph.conf
              subPath: ceph.conf
              readOnly: true
            {{- if empty $envAll.Values.conf.ceph.admin_keyring }}
            - name: ceph-keyring
              mountPath: /tmp/client-keyring
              subPath: key
              readOnly: true
            {{- end }}
            {{- end }}
      volumes:
        - name: pod-tmp
          emptyDir:
            medium: Memory
        - name: nova-bin
          configMap:
            name: nova-bin
            defaultMode: 0555
        {{- if $envAll.Values.conf.ceph.enabled }}
        - name: etcceph
          emptyDir:
            medium: Memory
        - name: ceph-etc
          configMap:
            name: {{ .Values.ceph_client.configmap }}
            defaultMode: 0444
        {{- if empty .Values.conf.ceph.admin_keyring }}
        - name: ceph-keyring
          secret:
            secretName: {{ .Values.ceph_client.user_secret_name }}
        {{- end }}
        {{- end }}
{{- end }}