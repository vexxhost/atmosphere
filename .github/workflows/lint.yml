name: lint
on:
  pull_request:

jobs:
  commitlint-pr-title:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Install Commitlint
        run: |
          npm i -g @commitlint/cli @commitlint/config-conventional

      - name: Lint PR Title
        id: pr-title-lint
        run: |
          echo "${{ github.event.pull_request.title }}" | npx commitlint ./LINT_ERRORS

      - name: Add/Update Help Comment
        if: failure() && steps.pr-title-lint.outcome == 'failure'
        uses: marocchino/sticky-pull-request-comment@v2.8.0
        with:
          header: commitlint-pr-title
          path: ./LINT_ERRORS
          recreate: true

      - name: Remove Help Comment
        if: success() && steps.pr-title-lint.outcome == 'success'
        uses: marocchino/sticky-pull-request-comment@v2.8.0
        with:
          header: commitlint-pr-title
          delete: true

  Pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4

      - name: Get Python info
        id: python_info
        run: echo info=$(python -VV | sha256sum | cut -d' ' -f1) >> $GITHUB_OUTPUT

      - name: Create pre-commit cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ steps.python_info.outputs.info }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Setup pre-commit
        uses: pre-commit/action@v3.0.0
