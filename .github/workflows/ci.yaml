name: ci

on:
  pull_request:
  push:
    branches:
      - main
      - stable/*

permissions: {}

jobs:
  cargo:
    uses: vexxhost/github-actions/.github/workflows/cargo.yml@d240297ac3f2162871403fea1074360da43d4585 # main
    with:
      install-promtool: true

  chart-vendor:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: vexxhost/chart-vendor@3c91cecf08feb55ab66586b91b1a116b6cf0dbd9 # main

  go-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: go.mod
      - uses: robherley/go-test-action@b19f6aadabfb1ad85079065b21aa2af132466468 # v0.6.0

  vale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get install -y docutils
      - uses: errata-ai/vale-action@v2.1.1
        with:
          files: doc,releasenotes
          separator: ","
          fail_on_error: true

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/build
        with:
          pin-images: false
      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/build

  images:
    runs-on: ubuntu-latest
    concurrency:
      group: images-push-${{ github.ref }}
      cancel-in-progress: false
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: depot/setup-action@v1
      - run: echo tag=$(echo ${{ github.event_name == 'pull_request' && github.base_ref || github.ref_name }} | cut -d'/' -f2) >> $GITHUB_OUTPUT
        id: image_info
      - uses: docker/login-action@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: harbor.atmosphere.dev
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - uses: depot/bake-action@v1
        id: bake
        with:
          project: jd10vkmkwv
          save: ${{ github.event_name == 'pull_request' }}
          push: ${{ github.event_name != 'pull_request' }}
        env:
          TAG: ${{ steps.image_info.outputs.tag }}
    outputs:
      build-id: ${{ steps.bake.outputs.build-id }}

  csi:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    strategy:
      fail-fast: false
      matrix:
        csi_driver:
          - local-path-provisioner
          - rbd
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/molecule
        with:
          scenario: csi
          csi_driver: ${{ matrix.csi_driver }}

  keycloak:
    runs-on: vexxhost-ubuntu-22.04-4
    if: ${{ github.event_name == 'pull_request' }}
    concurrency:
      group: ${{ github.job }}-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/molecule
        with:
          scenario: keycloak

  aio:
    runs-on: vexxhost-ubuntu-22.04-16
    if: ${{ github.event_name == 'pull_request' }}
    concurrency:
      group: ${{ github.job }}-${{ matrix.network_backend }}-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    permissions:
      id-token: write
      contents: read
    needs:
      - images
    strategy:
      fail-fast: false
      matrix:
        network_backend:
          - openvswitch
          - ovn
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/molecule
        with:
          scenario: aio
          network_backend: ${{ matrix.network_backend }}
          depot_build_id: ${{ needs.images.outputs.build-id }}
