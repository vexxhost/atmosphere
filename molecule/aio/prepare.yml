# Copyright (c) 2023 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- import_playbook: vexxhost.atmosphere.generate_workspace
  vars:
    workspace_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}"
    domain_name: "{{ '{{' }} ansible_default_ipv4['address'].replace('.', '-') {{ '}}' }}.{{ lookup('env', 'ATMOSPHERE_DNS_SUFFIX_NAME') | default('nip.io', True) }}"
    ceph_public_network: 10.96.230.0/24

- name: Clean-up system from GitHub Actions
  hosts: all
  become: true
  tasks:
    - name: Remove conflicting packages
      ansible.builtin.apt:
        state: absent
        purge: true
        name:
          - moby-containerd
          - moby-runc

    - name: Remove Docker socket
      ansible.builtin.file:
        path: /var/run/docker.sock
        state: absent

- name: Create devices for Ceph
  hosts: all
  become: true
  vars:
    ceph_osds: ["osd0", "osd1", "osd2"]
  tasks:
    - name: Create devices for Ceph
      ansible.builtin.command: truncate -s 1024G /opt/{{ item }}.img
      args:
        creates: /opt/{{ item }}.img
      with_items: "{{ ceph_osds }}"

    - name: Get list of all loopback devices
      ansible.builtin.shell: losetup -J
      register: _losetup_l

    - name: Start loopback devices for unmapped images
      ansible.builtin.command: losetup -fP /opt/{{ item }}.img
      with_items: "{{ ceph_osds }}"
      when: _losetup_l.stdout | from_json | json_query('loopdevices[?"back-file"==`/opt/' + item + '.img`]."back-file"') | length == 0

    - name: Set permissions on loopback devices
      ansible.builtin.file:
        path: /opt/{{ item }}.img
        mode: 0777
      with_items: "{{ ceph_osds }}"

    - name: Get list of all loopback devices
      ansible.builtin.shell: losetup -J
      register: _losetup_l

    - name: Create a volume group for each loop device
      community.general.lvg:
        vg: ceph-{{ item['back-file'].split('/')[-1].split('.')[0] }}
        pvs: "{{ item.name }}"
      loop: "{{ _losetup_l.stdout | from_json | json_query('loopdevices[?starts_with(\"back-file\", `/opt/osd`)].{name: name, \"back-file\": \"back-file\"}') }}"
      register: _lvg

    - name: Create a logical volume for each loop device
      community.general.lvol:
        vg: "{{ item.invocation.module_args.vg }}"
        lv: data
        size: 100%FREE
        shrink: false
      loop: "{{ _lvg.results }}"
      loop_control:
        label: "{{ item.invocation.module_args.vg }}"

    - name: Overwrite existing osds.yml file
      ansible.builtin.copy:
        content: |
          ceph_osd_devices:
            {% for item in _lvg.results %}
            - /dev/{{ item.invocation.module_args.vg }}/data
            {% endfor %}
        dest: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/group_vars/cephs/osds.yml"

- name: Create devices for networking
  hosts: all
  become: true
  tasks:
    - name: Create interface for networking
      ansible.builtin.command: ip link add eth1 type dummy

    - name: Enable dummy interface
      ansible.builtin.command: ip link set eth1 up

    - name: Add IP address for eth1 interface
      ansible.builtin.command: ip addr add 10.96.250.20/24 dev eth1

    - name: Add IP address for eth1 interface
      ansible.builtin.command: ip addr add 10.96.230.20/24 dev eth1

    - name: Set masquerade rule
      become: yes
      ansible.builtin.iptables:
        action: insert
        table: nat
        chain: POSTROUTING
        source: 10.96.250.0/24
        out_interface: "{{ ansible_default_ipv4.interface }}"
        jump: MASQUERADE
