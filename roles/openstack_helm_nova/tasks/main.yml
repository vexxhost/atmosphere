# Copyright (c) 2022 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Deploy Service
  run_once: true
  kubernetes.core.k8s:
    state: present
    definition:
      - apiVersion: infra.atmosphere.vexxhost.com/v1alpha1
        kind: RabbitmqCluster
        metadata:
          name: nova
          namespace: openstack
        spec:
          imageRepository: "{{ atmosphere_image_repository | default(None) }}"

      - apiVersion: v1
        kind: Secret
        metadata:
          name: nova
          namespace: openstack
        type: Opaque
        stringData:
          memcache: "{{ openstack_helm_endpoints_memcached_secret_key }}"
          rabbitmq: "{{ openstack_helm_endpoints_nova_rabbitmq_password }}"
          database: "{{ openstack_helm_endpoints_nova_mariadb_password }}"
          keystone: "{{ openstack_helm_endpoints_nova_keystone_password }}"
          metadata: "{{ openstack_helm_endpoints_neutron_metadata_secret }}"
          ssh: "{{ openstack_helm_nova_ssh_key }}"

      - apiVersion: openstack.atmosphere.vexxhost.com/v1alpha1
        kind: Nova
        metadata:
          name: nova
          namespace: openstack
        spec:
          replicas: 3
          regionName: "{{ openstack_helm_endpoints_nova_region_name | default(openstack_helm_endpoints_region_name) }}"
          imageRepository: "{{ atmosphere_image_repository | default(None) }}"
          ingress:
            host: "{{ openstack_helm_endpoints_nova_api_host }}"
            className: "{{ openstack_helm_ingress_class_name | default('openstack') }}"
            annotations: "{{ openstack_helm_nova_ingress_annotations }}"
          vncIngress:
            host: "{{ openstack_helm_endpoints_nova_novnc_host }}"
            className: "{{ openstack_helm_ingress_class_name | default('openstack') }}"
            annotations: "{{ openstack_helm_nova_ingress_annotations }}"
          keystoneRef:
            name: keystone
          placementRef:
            name: placement
          glanceRef:
            name: glance
          neutronRef:
            name: neutron
          ironicRef:
            name: ironic
          secretsRef:
            name: nova
          databaseRef:
            name: percona-xtradb
          rabbitmqRef:
            name: nova
          overrides: "{{ _openstack_helm_nova_values | combine(openstack_helm_nova_values, recursive=True) }}"

- name: Create flavors
  when: openstack_helm_nova_flavors | length > 0
  run_once: true
  block:
    - name: Wait until compute api service ready
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: nova-api-osapi
        namespace: openstack
        wait_sleep: 10
        wait_timeout: 600
        wait: true
        wait_condition:
          type: Available
          status: true

    - name: Create flavors
      openstack.cloud.compute_flavor:
        cloud: atmosphere
        # Flavor settings
        flavorid: "{{ item.flavorid | default(omit) }}"
        name: "{{ item.name }}"
        vcpus: "{{ item.vcpus }}"
        ram: "{{ item.ram }}"
        disk: "{{ item.disk | default(omit) }}"
        ephemeral: "{{ item.ephemeral | default(omit) }}"
        swap: "{{ item.swap | default(omit) }}"
        is_public: "{{ item.is_public | default(omit) }}"
        rxtx_factor: "{{ item.rxtx_factor | default(omit) }}"
        extra_specs: "{{ item.extra_specs | default(omit) }}"
      loop: "{{ openstack_helm_nova_flavors }}"
      # NOTE(mnaser): This often fails with a 503 since we're sending a request
      #               way too fast after the service is ready, retry for now
      #               but the Helm chart should be fixed.
      #
      #               See: https://github.com/vexxhost/atmosphere/issues/72
      retries: 60
      delay: 5
      register: _result
      until: _result is not failed
