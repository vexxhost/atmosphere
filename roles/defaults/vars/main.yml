# Copyright (c) 2023 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

atmosphere_release: main

_atmosphere_images:
  alertmanager: quay.io/prometheus/alertmanager:v0.27.0
  barbican_api: "registry.atmosphere.dev/library/barbican:{{ atmosphere_release }}"
  barbican_db_sync: "registry.atmosphere.dev/library/barbican:{{ atmosphere_release }}"
  bootstrap: "registry.atmosphere.dev/library/heat:{{ atmosphere_release }}"
  ceph_config_helper: "registry.atmosphere.dev/library/libvirtd:{{ atmosphere_release }}"
  ceph: quay.io/ceph/ceph:v18.2.1
  cert_manager_cainjector: quay.io/jetstack/cert-manager-cainjector:v1.12.10
  cert_manager_cli: quay.io/jetstack/cert-manager-ctl:v1.12.10
  cert_manager_controller: quay.io/jetstack/cert-manager-controller:v1.12.10
  cert_manager_webhook: quay.io/jetstack/cert-manager-webhook:v1.12.10
  cilium_node: quay.io/cilium/cilium:v1.14.8
  cilium_operator: quay.io/cilium/operator-generic:v1.14.8
  cinder_api: "registry.atmosphere.dev/library/cinder:{{ atmosphere_release }}"
  cinder_backup_storage_init: "registry.atmosphere.dev/library/cinder:{{ atmosphere_release }}"
  cinder_backup: "registry.atmosphere.dev/library/cinder:{{ atmosphere_release }}"
  cinder_db_sync: "registry.atmosphere.dev/library/cinder:{{ atmosphere_release }}"
  cinder_scheduler: "registry.atmosphere.dev/library/cinder:{{ atmosphere_release }}"
  cinder_storage_init: "registry.atmosphere.dev/library/cinder:{{ atmosphere_release }}"
  cinder_volume_usage_audit: "registry.atmosphere.dev/library/cinder:{{ atmosphere_release }}"
  cinder_volume: "registry.atmosphere.dev/library/cinder:{{ atmosphere_release }}"
  cluster_api_controller: registry.k8s.io/cluster-api/cluster-api-controller:v1.6.0
  cluster_api_kubeadm_bootstrap_controller: registry.k8s.io/cluster-api/kubeadm-bootstrap-controller:v1.6.0
  cluster_api_kubeadm_control_plane_controller: registry.k8s.io/cluster-api/kubeadm-control-plane-controller:v1.6.0
  cluster_api_openstack_controller: registry.k8s.io/capi-openstack/capi-openstack-controller:v0.9.0
  csi_node_driver_registrar: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.10.0
  csi_rbd_attacher: registry.k8s.io/sig-storage/csi-attacher:v4.5.0
  csi_rbd_plugin: quay.io/cephcsi/cephcsi:v3.11.0
  csi_rbd_provisioner: registry.k8s.io/sig-storage/csi-provisioner:v4.0.0
  csi_rbd_resizer: registry.k8s.io/sig-storage/csi-resizer:v1.10.0
  csi_rbd_snapshotter: registry.k8s.io/sig-storage/csi-snapshotter:v7.0.0
  db_drop: "registry.atmosphere.dev/library/heat:{{ atmosphere_release }}"
  db_init: "registry.atmosphere.dev/library/heat:{{ atmosphere_release }}"
  dep_check: "registry.atmosphere.dev/library/kubernetes-entrypoint:{{ atmosphere_release }}"
  designate_api: "registry.atmosphere.dev/library/designate:{{ atmosphere_release }}"
  designate_central: "registry.atmosphere.dev/library/designate:{{ atmosphere_release }}"
  designate_db_sync: "registry.atmosphere.dev/library/designate:{{ atmosphere_release }}"
  designate_mdns: "registry.atmosphere.dev/library/designate:{{ atmosphere_release }}"
  designate_producer: "registry.atmosphere.dev/library/designate:{{ atmosphere_release }}"
  designate_sink: "registry.atmosphere.dev/library/designate:{{ atmosphere_release }}"
  designate_worker: "registry.atmosphere.dev/library/designate:{{ atmosphere_release }}"
  glance_api: "registry.atmosphere.dev/library/glance:{{ atmosphere_release }}"
  glance_db_sync: "registry.atmosphere.dev/library/glance:{{ atmosphere_release }}"
  glance_metadefs_load: "registry.atmosphere.dev/library/glance:{{ atmosphere_release }}"
  glance_registry: "registry.atmosphere.dev/library/glance:{{ atmosphere_release }}"
  glance_storage_init: "registry.atmosphere.dev/library/glance:{{ atmosphere_release }}"
  grafana_sidecar: quay.io/kiwigrid/k8s-sidecar:1.26.1
  grafana: docker.io/grafana/grafana:10.4.0
  haproxy: docker.io/library/haproxy:2.5
  heat_api: "registry.atmosphere.dev/library/heat:{{ atmosphere_release }}"
  heat_cfn: "registry.atmosphere.dev/library/heat:{{ atmosphere_release }}"
  heat_cloudwatch: "registry.atmosphere.dev/library/heat:{{ atmosphere_release }}"
  heat_db_sync: "registry.atmosphere.dev/library/heat:{{ atmosphere_release }}"
  heat_engine_cleaner: "registry.atmosphere.dev/library/heat:{{ atmosphere_release }}"
  heat_engine: "registry.atmosphere.dev/library/heat:{{ atmosphere_release }}"
  heat_purge_deleted: "registry.atmosphere.dev/library/heat:{{ atmosphere_release }}"
  horizon_db_sync: "registry.atmosphere.dev/library/horizon:{{ atmosphere_release }}"
  horizon: "registry.atmosphere.dev/library/horizon:{{ atmosphere_release }}"
  ingress_nginx_controller: registry.k8s.io/ingress-nginx/controller:v1.10.0
  ingress_nginx_default_backend: registry.k8s.io/defaultbackend-amd64:1.5
  ingress_nginx_kube_webhook_certgen: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.0
  keepalived: "registry.atmosphere.dev/library/keepalived:{{ atmosphere_release }}"
  keycloak: quay.io/keycloak/keycloak:23.0.7-0
  keystone_api: "registry.atmosphere.dev/library/keystone:{{ atmosphere_release }}"
  keystone_credential_cleanup: "registry.atmosphere.dev/library/heat:{{ atmosphere_release }}"
  keystone_credential_rotate: "registry.atmosphere.dev/library/keystone:{{ atmosphere_release }}"
  keystone_credential_setup: "registry.atmosphere.dev/library/keystone:{{ atmosphere_release }}"
  keystone_db_sync: "registry.atmosphere.dev/library/keystone:{{ atmosphere_release }}"
  keystone_domain_manage: "registry.atmosphere.dev/library/heat:{{ atmosphere_release }}"
  keystone_fernet_rotate: "registry.atmosphere.dev/library/keystone:{{ atmosphere_release }}"
  keystone_fernet_setup: "registry.atmosphere.dev/library/keystone:{{ atmosphere_release }}"
  ks_endpoints: "registry.atmosphere.dev/library/heat:{{ atmosphere_release }}"
  ks_service: "registry.atmosphere.dev/library/heat:{{ atmosphere_release }}"
  ks_user: "registry.atmosphere.dev/library/heat:{{ atmosphere_release }}"
  kube_apiserver: registry.k8s.io/kube-apiserver:v1.22.17
  kube_controller_manager: registry.k8s.io/kube-controller-manager:v1.22.17
  kube_coredns: registry.k8s.io/coredns/coredns:v1.8.4
  kube_etcd: registry.k8s.io/etcd:3.5.6-0
  kube_proxy: registry.k8s.io/kube-proxy:v1.22.17
  kube_scheduler: registry.k8s.io/kube-scheduler:v1.22.17
  kube_state_metrics: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.12.0
  kubectl: docker.io/bitnami/kubectl:1.27.3
  libvirt: "registry.atmosphere.dev/library/libvirtd:{{ atmosphere_release }}"
  libvirt_tls_sidecar: "registry.atmosphere.dev/library/libvirt-tls-sidecar:{{ atmosphere_release }}"
  libvirt_exporter: docker.io/vexxhost/libvirtd-exporter:latest
  local_path_provisioner_helper: docker.io/library/busybox:1.36.0
  local_path_provisioner: docker.io/rancher/local-path-provisioner:v0.0.24
  loki_gateway: docker.io/nginxinc/nginx-unprivileged:1.24-alpine
  loki: docker.io/grafana/loki:3.0.0
  magnum_api: "registry.atmosphere.dev/library/magnum:{{ atmosphere_release }}"
  magnum_cluster_api_proxy: "registry.atmosphere.dev/library/magnum:{{ atmosphere_release }}"
  magnum_conductor: "registry.atmosphere.dev/library/magnum:{{ atmosphere_release }}"
  magnum_db_sync: "registry.atmosphere.dev/library/magnum:{{ atmosphere_release }}"
  magnum_registry: quay.io/vexxhost/magnum-cluster-api-registry:latest
  manila_api: "registry.atmosphere.dev/library/manila:{{ atmosphere_release }}"
  manila_data: "registry.atmosphere.dev/library/manila:{{ atmosphere_release }}"
  manila_db_sync: "registry.atmosphere.dev/library/manila:{{ atmosphere_release }}"
  manila_scheduler: "registry.atmosphere.dev/library/manila:{{ atmosphere_release }}"
  manila_share: "registry.atmosphere.dev/library/manila:{{ atmosphere_release }}"
  memcached: docker.io/library/memcached:1.6.26
  netoffload: "registry.atmosphere.dev/library/netoffload:{{ atmosphere_release }}"
  neutron_bagpipe_bgp: "registry.atmosphere.dev/library/neutron:{{ atmosphere_release }}"
  neutron_bgp_dragent: "registry.atmosphere.dev/library/neutron:{{ atmosphere_release }}"
  neutron_coredns: docker.io/coredns/coredns:1.11.1
  neutron_db_sync: "registry.atmosphere.dev/library/neutron:{{ atmosphere_release }}"
  neutron_dhcp: "registry.atmosphere.dev/library/neutron:{{ atmosphere_release }}"
  neutron_ironic_agent: "registry.atmosphere.dev/library/neutron:{{ atmosphere_release }}"
  neutron_l2gw: "registry.atmosphere.dev/library/neutron:{{ atmosphere_release }}"
  neutron_l3: "registry.atmosphere.dev/library/neutron:{{ atmosphere_release }}"
  neutron_linuxbridge_agent: "registry.atmosphere.dev/library/neutron:{{ atmosphere_release }}"
  neutron_metadata: "registry.atmosphere.dev/library/neutron:{{ atmosphere_release }}"
  neutron_netns_cleanup_cron: "registry.atmosphere.dev/library/neutron:{{ atmosphere_release }}"
  neutron_openvswitch_agent: "registry.atmosphere.dev/library/neutron:{{ atmosphere_release }}"
  neutron_ovn_metadata: "registry.atmosphere.dev/library/neutron:{{ atmosphere_release }}"
  neutron_server: "registry.atmosphere.dev/library/neutron:{{ atmosphere_release }}"
  neutron_rpc_server: "registry.atmosphere.dev/library/neutron:{{ atmosphere_release }}"
  neutron_sriov_agent_init: "registry.atmosphere.dev/library/neutron:{{ atmosphere_release }}"
  neutron_sriov_agent: "registry.atmosphere.dev/library/neutron:{{ atmosphere_release }}"
  node_feature_discovery: registry.k8s.io/nfd/node-feature-discovery:v0.15.4
  nova_api: "registry.atmosphere.dev/library/nova:{{ atmosphere_release }}"
  nova_archive_deleted_rows: "registry.atmosphere.dev/library/nova:{{ atmosphere_release }}"
  nova_cell_setup_init: "registry.atmosphere.dev/library/heat:{{ atmosphere_release }}"
  nova_cell_setup: "registry.atmosphere.dev/library/nova:{{ atmosphere_release }}"
  nova_compute_ironic: "registry.atmosphere.dev/library/nova:{{ atmosphere_release }}"
  nova_compute_ssh: "registry.atmosphere.dev/library/nova-ssh:{{ atmosphere_release }}"
  nova_compute: "registry.atmosphere.dev/library/nova:{{ atmosphere_release }}"
  nova_conductor: "registry.atmosphere.dev/library/nova:{{ atmosphere_release }}"
  nova_consoleauth: "registry.atmosphere.dev/library/nova:{{ atmosphere_release }}"
  nova_db_sync: "registry.atmosphere.dev/library/nova:{{ atmosphere_release }}"
  nova_novncproxy_assets: "registry.atmosphere.dev/library/nova:{{ atmosphere_release }}"
  nova_novncproxy: "registry.atmosphere.dev/library/nova:{{ atmosphere_release }}"
  nova_placement: "registry.atmosphere.dev/library/nova:{{ atmosphere_release }}"
  nova_scheduler: "registry.atmosphere.dev/library/nova:{{ atmosphere_release }}"
  nova_service_cleaner: "registry.atmosphere.dev/library/heat:{{ atmosphere_release }}"
  nova_spiceproxy_assets: "registry.atmosphere.dev/library/nova:{{ atmosphere_release }}"
  nova_spiceproxy: "registry.atmosphere.dev/library/nova:{{ atmosphere_release }}"
  oauth2_proxy: quay.io/oauth2-proxy/oauth2-proxy:v7.6.0
  octavia_api: "registry.atmosphere.dev/library/octavia:{{ atmosphere_release }}"
  octavia_db_sync: "registry.atmosphere.dev/library/octavia:{{ atmosphere_release }}"
  octavia_health_manager_init: "registry.atmosphere.dev/library/heat:{{ atmosphere_release }}"
  octavia_health_manager: "registry.atmosphere.dev/library/octavia:{{ atmosphere_release }}"
  octavia_housekeeping: "registry.atmosphere.dev/library/octavia:{{ atmosphere_release }}"
  octavia_worker: "registry.atmosphere.dev/library/octavia:{{ atmosphere_release }}"
  openstack_cli: "registry.atmosphere.dev/library/python-openstackclient:{{ atmosphere_release }}"
  openvswitch_db_server: "registry.atmosphere.dev/library/openvswitch:{{ atmosphere_release }}"
  openvswitch_vswitchd: "registry.atmosphere.dev/library/openvswitch:{{ atmosphere_release }}"
  ovn_controller: "registry.atmosphere.dev/library/ovn-host:{{ atmosphere_release }}"
  ovn_northd: "registry.atmosphere.dev/library/ovn-central:{{ atmosphere_release }}"
  ovn_ovsdb_nb: "registry.atmosphere.dev/library/ovn-central:{{ atmosphere_release }}"
  ovn_ovsdb_sb: "registry.atmosphere.dev/library/ovn-central:{{ atmosphere_release }}"
  pause: registry.k8s.io/pause:3.9
  percona_xtradb_cluster_haproxy: docker.io/percona/percona-xtradb-cluster-operator:1.14.0-haproxy
  percona_xtradb_cluster_operator: docker.io/percona/percona-xtradb-cluster-operator:1.14.0
  percona_xtradb_cluster: docker.io/percona/percona-xtradb-cluster:8.0.36-28.1
  percona_version_service: docker.io/perconalab/version-service:production-2048c1f
  placement_db_sync: "registry.atmosphere.dev/library/placement:{{ atmosphere_release }}"
  placement: "registry.atmosphere.dev/library/placement:{{ atmosphere_release }}"
  prometheus_config_reloader: quay.io/prometheus-operator/prometheus-config-reloader:v0.73.0
  prometheus_ipmi_exporter: us-docker.pkg.dev/vexxhost-infra/openstack/ipmi-exporter:1.4.0
  prometheus_memcached_exporter: quay.io/prometheus/memcached-exporter:v0.14.3
  prometheus_mysqld_exporter: quay.io/prometheus/mysqld-exporter:v0.15.1
  prometheus_node_exporter: quay.io/prometheus/node-exporter:v1.7.0
  prometheus_openstack_database_exporter: ghcr.io/vexxhost/openstack-database-exporter:v0.3.0
  prometheus_openstack_exporter: ghcr.io/openstack-exporter/openstack-exporter:1.7.0
  prometheus_operator_kube_webhook_certgen: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20221220-controller-v1.5.1-58-g787ea74b6
  prometheus_operator: quay.io/prometheus-operator/prometheus-operator:v0.73.0
  prometheus_pushgateway: docker.io/prom/pushgateway:v1.8.0
  prometheus: quay.io/prometheus/prometheus:v2.51.2
  rabbit_init: docker.io/library/rabbitmq:3.11.28-management
  rabbitmq_cluster_operator: docker.io/rabbitmqoperator/cluster-operator:2.8.0
  rabbitmq_credential_updater: docker.io/rabbitmqoperator/default-user-credential-updater:1.0.4
  rabbitmq_server: docker.io/library/rabbitmq:3.11.28-management
  rabbitmq_topology_operator: docker.io/rabbitmqoperator/messaging-topology-operator:1.13.0
  rook_ceph: docker.io/rook/ceph:v1.14.2
  secretgen_controller: ghcr.io/carvel-dev/secretgen-controller@sha256:59ec05ce5847bfd70c8e04f08b5195e918c8f6fbb947ffc91b456494a2958fd5
  senlin_api: "registry.atmosphere.dev/library/senlin:{{ atmosphere_release }}"
  senlin_conductor: "registry.atmosphere.dev/library/senlin:{{ atmosphere_release }}"
  senlin_db_sync: "registry.atmosphere.dev/library/senlin:{{ atmosphere_release }}"
  senlin_engine_cleaner: "registry.atmosphere.dev/library/senlin:{{ atmosphere_release }}"
  senlin_engine: "registry.atmosphere.dev/library/senlin:{{ atmosphere_release }}"
  senlin_health_manager: "registry.atmosphere.dev/library/senlin:{{ atmosphere_release }}"
  staffeln_db_sync: "registry.atmosphere.dev/library/staffeln:{{ atmosphere_release }}"
  staffeln_conductor: "registry.atmosphere.dev/library/staffeln:{{ atmosphere_release }}"
  staffeln_api: "registry.atmosphere.dev/library/staffeln:{{ atmosphere_release }}"
  tempest_run_tests: "registry.atmosphere.dev/library/tempest:{{ atmosphere_release }}"
  vector: docker.io/timberio/vector:0.37.1-debian

atmosphere_images: '{{ _atmosphere_images | combine(atmosphere_image_overrides, recursive=True)
  }}'
