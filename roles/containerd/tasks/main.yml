# Copyright (c) 2023 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Remove containerd package
  ansible.builtin.package:
    name: "{{ containerd_package_name }}"
    state: absent

- name: Install AppArmor packages
  ansible.builtin.package:
    state: present
    name:
      - apparmor
      - apparmor-utils
  when: ansible_facts['os_family'] == "Debian"

- name: Install containerd binaries
  ansible.builtin.copy:
    src: "{{ containerd_download_unarchive_dest }}/{{ item }}"
    dest: "{{ containerd_bin_dir }}/{{ item }}"
    mode: "0755"
    remote_src: true
  loop: "{{ containerd_binaries }}"
  notify: Restart containerd

- name: Remove containerd orphaned binaries
  ansible.builtin.file:
    path: "/usr/bin/{{ item }}"
    state: absent
  loop: "{{ containerd_binaries }}"
  when: containerd_bin_dir != "/usr/bin"

- name: Create systemd service file for containerd
  ansible.builtin.template:
    src: containerd.service.j2
    dest: /etc/systemd/system/containerd.service
    mode: "0644"
  notify:
    - Reload systemd
    - Restart containerd

- name: Create folders for configuration
  ansible.builtin.file:
    dest: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode | default('0o755') }}"
    owner: root
    group: root
  with_items:
    - path: "{{ containerd_cfg_dir }}"
    - path: "{{ containerd_storage_dir }}"
    - path: "{{ containerd_state_dir }}"
      mode: "0o711"
  notify:
    - Restart containerd

- name: Workaround for "/var/lib/containerd" inside "overlayfs"
  block:
    - name: Generate a 20G file for "/var/lib/containers"
      ansible.builtin.command: truncate -s 20G /var/lib/containerd.img
      args:
        creates: /var/lib/containerd.img

    - name: Install "xfsprogs" package
      ansible.builtin.package:
        name: xfsprogs
        state: present

    - name: Create an "xfs" filesystem on "/var/lib/containerd.img"
      ansible.builtin.command: mkfs.xfs -m reflink=1 /var/lib/containerd.img
      register: _mkfs_xfs
      changed_when: "'contain an existing filesystem' not in _mkfs_xfs.stderr"
      failed_when: false

    - name: Mount the "xfs" filesystem
      ansible.builtin.mount:
        path: /var/lib/containerd
        src: /var/lib/containerd.img
        fstype: xfs
        state: mounted
  # NOTE(mnaser): This is to allow our tests to run on Docker containers since
  #               the "/var/lib/containerd" directory cannot be mounted inside
  #               an "overlayfs" filesystem.
  when:
    - ansible_connection == "community.docker.docker"

- name: Create containerd config file
  ansible.builtin.template:
    src: config.toml.j2
    dest: "{{ containerd_cfg_file }}"
    owner: root
    group: root
    mode: "0644"
  notify:
    - Restart containerd

- name: Ensure IPv6 is enabled
  ansible.posix.sysctl:
    name: net.ipv6.conf.all.disable_ipv6
    value: 0
    sysctl_set: true

- name: Force any restarts if necessary
  ansible.builtin.meta: flush_handlers

- name: Enable and start service
  ansible.builtin.service:
    name: containerd
    enabled: true
    state: started
