# Copyright (c) 2022 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- set_fact:
    _oidc_configs: []
    _mountPoints: []

- name: Check prerequisite for federation setup
  include_tasks: precheck.yml
  loop: "{{ keystone_helm_values.conf.ks_domains | combine(keystone_helm_values.conf.ks_domains) | dict2items }}"
  loop_control:
    loop_var: _ks_domain
  tags:
      - keystone-federation-mapping

- name: Create config map manifest
  ansible.builtin.template:
    src: openid-metadata.j2
    dest: /tmp/keystone-openidc-metadata.yml

- name: Apply k8s manifest for OIDC metadata config map
  kubernetes.core.k8s:
    state: present
    src: /tmp/keystone-openidc-metadata.yml

- name: Setup helm value override to mount metadata files
  include_tasks: setup.yml
  loop: "{{ _oidc_configs }}"
  loop_control:
    loop_var: _idp

- name: Create temporary helm overrides
  set_fact:
    _keystone_keycloak_helm_overrides:
      pod:
        mounts:
          keystone_api:
            keystone_api:
              volumeMounts: "{{ _mountPoints }}"
              volumes:
                - name: keystone-openidc-metadata
                  configMap:
                    name: keystone-openidc-metadata


- name: Combine pod overrides
  set_fact:
    keystone_helm_values: "{{ keystone_helm_values | combine(_keystone_keycloak_helm_overrides, recursive=True) }}"

- name: Uninstall the legacy HelmRelease
  run_once: true
  block:
    - name: Suspend the existing HelmRelease
      failed_when: false
      kubernetes.core.k8s:
        state: patched
        api_version: helm.toolkit.fluxcd.io/v2beta1
        kind: HelmRelease
        name: "{{ keystone_helm_release_name }}"
        namespace: "{{ keystone_helm_release_namespace }}"
        definition:
          spec:
            suspend: true

    - name: Remove the existing HelmRelease
      failed_when: false
      kubernetes.core.k8s:
        state: absent
        api_version: helm.toolkit.fluxcd.io/v2beta1
        kind: HelmRelease
        name: "{{ keystone_helm_release_name }}"
        namespace: "{{ keystone_helm_release_namespace }}"

- name: Create Keycloak realms
  run_once: true
  delegate_to: localhost
  community.general.keycloak_realm:
    # Keycloak settings
    auth_keycloak_url: "{{ item.keycloak_server_url }}"
    auth_realm: "{{ item.keycloak_user_realm_name }}"
    auth_client_id: "{{ item.keycloak_admin_client_id }}"
    auth_username: "{{ item.keycloak_admin_user }}"
    auth_password: "{{ item.keycloak_admin_password }}"
    validate_certs: "{{ cluster_issuer_type != 'self-signed' }}"
    # Realm settings
    id: "{{ item.keycloak_realm }}"
    realm: "{{ item.keycloak_realm }}"
  loop: "{{ keystone_domains }}"
  loop_control:
    label: "{{ item.name }}"

- name: Create Keycloak clients
  run_once: true
  delegate_to: localhost
  community.general.keycloak_client:
    # Keycloak settings
    auth_keycloak_url: "{{ item.keycloak_server_url }}"
    auth_realm: "{{ item.keycloak_user_realm_name }}"
    auth_client_id: "{{ item.keycloak_admin_client_id }}"
    auth_username: "{{ item.keycloak_admin_user }}"
    auth_password: "{{ item.keycloak_admin_password }}"
    validate_certs: "{{ cluster_issuer_type != 'self-signed' }}"
    # Realm settings
    realm: "{{ item.keycloak_realm }}"
    client_id: "{{ item.keycloak_client_id }}"
    secret: "{{ item.keycloak_client_secret }}"
  loop: "{{ keystone_domains }}"
  loop_control:
    label: "{{ item.name }}"

- name: Deploy Helm chart
  run_once: true
  kubernetes.core.helm:
    name: "{{ keystone_helm_release_name }}"
    chart_ref: "{{ keystone_helm_chart_ref }}"
    release_namespace: "{{ keystone_helm_release_namespace }}"
    create_namespace: true
    kubeconfig: /etc/kubernetes/admin.conf
    values: "{{ _keystone_helm_values | combine(keystone_helm_values, recursive=True) }}"

- name: Create Ingress
  ansible.builtin.include_role:
    name: openstack_helm_ingress
  vars:
    openstack_helm_ingress_endpoint: identity
    openstack_helm_ingress_service_name: keystone-api
    openstack_helm_ingress_service_port: 5000
    openstack_helm_ingress_annotations: "{{ keystone_ingress_annotations }}"

- name: Create Keystone domains
  run_once: true
  delegate_to: localhost
  vexxhost.atmosphere.identity_domain:
    name: "{{ item.name }}"
  register: keystone_domains_result
  loop: "{{ keystone_domains }}"
  loop_control:
    label: "{{ item.name }}"

- name: Create Keystone identity providers
  run_once: true
  delegate_to: localhost
  vexxhost.atmosphere.federation_idp:
    name: "{{ item.domain.name }}"
    domain_id: "{{ item.domain.id }}"
    remote_ids:
      - "{{ item.item.keycloak_server_url }}/realms/{{ item.item.keycloak_realm }}"
  loop: "{{ keystone_domains_result.results }}"
  loop_control:
    label: "{{ item.domain.name }}"

- name: Create Keystone federation mappings
  run_once: true
  delegate_to: localhost
  vexxhost.atmosphere.federation_mapping:
    name: "{{ item.name }}-openid"
    rules:
      - local:
          - user:
              type: local
              id: "{0}"
              domain:
                name: "{{ item.name }}"
        remote:
          - type: OIDC-sub
  loop: "{{ keystone_domains }}"
  loop_control:
    label: "{{ item.name }}"

- name: Create Keystone federation protocols
  run_once: true
  delegate_to: localhost
  vexxhost.atmosphere.keystone_federation_protocol:
    name: "{{ item.name }}-openid"
    idp_id: "{{ item.name }}"
    mapping_id: "{{ item.name }}-openid"
  loop: "{{ keystone_domains }}"
  loop_control:
    label: "{{ item.name }}"
