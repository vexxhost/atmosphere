# Copyright (c) 2022 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Generate OpenStack-Helm endpoints
  ansible.builtin.include_role:
    name: openstack_helm_endpoints
  vars:
    openstack_helm_endpoints_repo_name: openstack-helm
    openstack_helm_endpoints_repo_url: https://tarballs.opendev.org/openstack/openstack-helm/
    openstack_helm_endpoints_chart: glance

- name: Deploy Helm chart
  kubernetes.core.k8s:
    state: present
    definition:
      - apiVersion: source.toolkit.fluxcd.io/v1beta2
        kind: GitRepository
        metadata:
          name: openstack-helm-infra
          namespace: openstack
        spec:
          interval: 60s
          url: https://opendev.org/openstack/openstack-helm-infra

      - apiVersion: source.toolkit.fluxcd.io/v1beta2
        kind: GitRepository
        metadata:
          name: openstack-helm
          namespace: openstack
        spec:
          interval: 60s
          url: https://github.com/vexxhost/openstack-helm
          ref:
            commit: 8348cb0d995b2c52a5bd3d3d3e1d9b7ffb517ee9
          include:
            - repository:
                name: openstack-helm-infra
              toPath: ../openstack-helm-infra

      - apiVersion: v1
        kind: Secret
        metadata:
          name: atmosphere-glance
          namespace: openstack
        stringData:
          values.yaml: "{{ _openstack_helm_glance_values | combine(openstack_helm_glance_values, recursive=True) | to_nice_yaml }}"

      - apiVersion: helm.toolkit.fluxcd.io/v2beta1
        kind: HelmRelease
        metadata:
          name: glance
          namespace: openstack
        spec:
          interval: 60s
          chart:
            spec:
              chart: ./glance
              sourceRef:
                kind: GitRepository
                name: openstack-helm
          install:
            disableWait: true
          upgrade:
            disableWait: true
          valuesFrom:
            - kind: Secret
              name: atmosphere-glance
            - kind: Secret
              name: percona-xtradb
              valuesKey: root
              targetPath: endpoints.oslo_db.auth.admin.password
            - kind: Secret
              name: rabbitmq-glance-default-user
              valuesKey: username
              targetPath: endpoints.oslo_messaging.auth.admin.username
            - kind: Secret
              name: rabbitmq-glance-default-user
              valuesKey: password
              targetPath: endpoints.oslo_messaging.auth.admin.password

- name: Create Ingress
  ansible.builtin.include_role:
    name: openstack_helm_ingress
  vars:
    openstack_helm_ingress_endpoint: image
    openstack_helm_ingress_service_name: glance-api
    openstack_helm_ingress_service_port: 9292
    openstack_helm_ingress_annotations: "{{ _openstack_helm_glance_ingress_annotations | combine(openstack_helm_glance_ingress_annotations) }}"

- name: Create images
  when: openstack_helm_glance_images | length > 0
  block:
    - name: Wait until image service ready
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: glance-api
        namespace: openstack
        wait_sleep: 10
        wait_timeout: 600
        wait: true
        wait_condition:
          type: Available
          status: true

    - name: Download images
      ansible.builtin.get_url:
        url: "{{ item.source_url | regex_replace('\\/$', '') }}/{{ item.image_file }}"
        dest: "/tmp/{{ item.image_file }}"
        mode: "0600"
      loop: "{{ openstack_helm_glance_images }}"

    - name: Upload images
      openstack.cloud.image:
        cloud: atmosphere
        name: "{{ item.name }}"
        state: present
        filename: "/tmp/{{ item.image_file }}"
        min_disk: "{{ item.min_disk | default(omit) }}"
        min_ram: "{{ item.min_ram | default(omit) }}"
        container_format: "{{ item.container_format | default(omit) }}"
        disk_format: "{{ item.disk_format | default(omit) }}"
        properties: "{{ item.properties | default(omit) }}"
        kernel: "{{ item.kernel | default(omit) }}"
        ramdisk: "{{ item.ramdisk | default(omit) }}"
        is_public: "{{ item.is_public | default(omit) }}"
      loop: "{{ openstack_helm_glance_images }}"
