# Copyright (c) 2022 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Create management network
  run_once: true
  openstack.cloud.network:
    cloud: atmosphere
    # Network settings
    name: lb-mgmt-net
  register: _openstack_helm_octavia_management_network

- name: Create management subnet
  run_once: true
  openstack.cloud.subnet:
    cloud: atmosphere
    # Subnet settings
    network_name: lb-mgmt-net
    name: lb-mgmt-subnet
    cidr: "{{ openstack_helm_octavia_management_subnet_cidr }}"

- name: Create health manager security group
  run_once: true
  openstack.cloud.security_group:
    cloud: atmosphere
    name: lb-health-mgr-sec-grp
  register: _openstack_helm_octavia_health_manager_sg

- name: Create health manager security group rules
  run_once: true
  openstack.cloud.security_group_rule:
    cloud: atmosphere
    security_group: "{{ _openstack_helm_octavia_health_manager_sg.id }}"
    direction: ingress
    ethertype: IPv4
    protocol: tcp
    port_range_min: "{{ item }}"
    port_range_max: "{{ item }}"
  loop:
    - 5555
    - 10514
    - 20514

- name: Create health manager networking ports
  openstack.cloud.port:
    cloud: atmosphere
    name: "octavia-health-manager-port-{{ inventory_hostname_short }}"
    device_owner: octavia:health-mgr
    network: "{{ _openstack_helm_octavia_management_network.id }}"
    security_groups:
      - "{{ _openstack_helm_octavia_health_manager_sg.id }}"

- name: Set binding for ports
  changed_when: false
  ansible.builtin.shell: |
    openstack port set \
      --host {{ ansible_fqdn }} \
      octavia-health-manager-port-{{ inventory_hostname_short }}
  environment:
    OS_CLOUD: atmosphere

- name: Get health manager networking ports
  run_once: true
  openstack.cloud.port_info:
    cloud: atmosphere
    port: "octavia-health-manager-port-{{ hostvars[item]['inventory_hostname_short'] }}"
  loop: "{{ play_hosts }}"
  register: _openstack_helm_octavia_health_manager_ports

- name: Set controller_ip_port_list
  run_once: true
  ansible.builtin.set_fact:
    _openstack_helm_octavia_controller_ip_port_list: "{{ (_openstack_helm_octavia_controller_ip_port_list | d([]) + [item.openstack_ports[0].fixed_ips[0].ip_address + ':5555']) | unique }}"
  loop: "{{ _openstack_helm_octavia_health_manager_ports.results }}"
  loop_control:
    label: "{{ item.openstack_ports[0].name }}"

- name: Create amphora security group
  run_once: true
  openstack.cloud.security_group:
    cloud: atmosphere
    name: lb-mgmt-sec-grp
  register: _openstack_helm_octavia_amphora_sg

- name: Create amphora security group rules
  run_once: true
  openstack.cloud.security_group_rule:
    cloud: atmosphere
    security_group: "{{ _openstack_helm_octavia_amphora_sg.id }}"
    direction: ingress
    ethertype: IPv4
    protocol: tcp
    port_range_min: "{{ item.0 }}"
    port_range_max: "{{ item.0 }}"
    remote_ip_prefix: "{{ item.1.openstack_ports[0].fixed_ips[0].ip_address }}/32"
  with_nested:
    - [22, 9443]
    - "{{ _openstack_helm_octavia_health_manager_ports.results }}"

- name: Create amphora flavor
  run_once: true
  openstack.cloud.compute_flavor:
    cloud: atmosphere
    name: "m1.amphora"
    vcpus: "1"
    ram: "1024"
    disk: "2"
    is_public: false
  register: _openstack_helm_octavia_amphora_flavor

- name: Download amphora image
  run_once: true
  ansible.builtin.get_url:
    url: "{{ openstack_helm_octavia_amphora_image_url }}"
    dest: "/tmp/{{ openstack_helm_octavia_amphora_image_url | basename }}"
    mode: 0644

- name: Upload images
  run_once: true
  openstack.cloud.image:
    cloud: atmosphere
    name: "amphora-x64-haproxy"
    filename: "/tmp/{{ openstack_helm_octavia_amphora_image_url | basename }}"
    container_format: "bare"
    disk_format: "qcow2"
    tags:
      - "amphora"
  register: _openstack_helm_octavia_amphora_image

- name: Create CAs & Issuers
  run_once: true
  kubernetes.core.k8s:
    state: present
    definition:
      - apiVersion: cert-manager.io/v1
        kind: Certificate
        metadata:
          name: "{{ item }}-ca"
          namespace: openstack
        spec:
          isCA: true
          commonName: "{{ item }}"
          secretName: "{{ item }}-ca"
          duration: 87600h
          renewBefore: 720h
          privateKey:
            algorithm: ECDSA
            size: 256
          issuerRef:
            name: self-signed
            kind: ClusterIssuer
            group: cert-manager.io

      - apiVersion: cert-manager.io/v1
        kind: Issuer
        metadata:
          name: "{{ item }}"
          namespace: openstack
        spec:
          ca:
            secretName: "{{ item }}-ca"
  loop:
    - octavia-client
    - octavia-server

- name: Create certificate for Octavia clients
  run_once: true
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: octavia-client-certs
        namespace: openstack
      spec:
        commonName: octavia-client
        secretName: octavia-client-certs
        additionalOutputFormats:
          - type: CombinedPEM
        duration: 87600h
        renewBefore: 720h
        issuerRef:
          name: octavia-client
          kind: Issuer
          group: cert-manager.io

- name: Create admin compute quotaset
  run_once: true
  openstack.cloud.quota:
    cloud: atmosphere
    # NOTE(okozachenko): It uses project name instead of id.
    name: admin
    instances: -1
    cores: -1
    ram: -1

- name: Deploy Service
  run_once: true
  kubernetes.core.k8s:
    state: present
    definition:
      - apiVersion: infra.atmosphere.vexxhost.com/v1alpha1
        kind: RabbitmqCluster
        metadata:
          name: octavia
          namespace: openstack
        spec:
          imageRepository: "{{ atmosphere_image_repository | default(None) }}"

      - apiVersion: v1
        kind: Secret
        metadata:
          name: octavia
          namespace: openstack
        type: Opaque
        stringData:
          memcache: "{{ openstack_helm_endpoints_memcached_secret_key }}"
          rabbitmq: "{{ openstack_helm_endpoints_octavia_rabbitmq_password }}"
          database: "{{ openstack_helm_endpoints_octavia_mariadb_password }}"
          keystone: "{{ openstack_helm_endpoints_octavia_keystone_password }}"
          heartbeat: "{{ openstack_helm_octavia_heartbeat_key }}"

      - apiVersion: openstack.atmosphere.vexxhost.com/v1alpha1
        kind: Octavia
        metadata:
          name: octavia
        spec:
          replicas: 3
          regionName: "{{ openstack_helm_endpoints_octavia_region_name | default(openstack_helm_endpoints_region_name) }}"
          imageRepository: "{{ atmosphere_image_repository | default(None) }}"
          ingress:
            host: "{{ openstack_helm_endpoints_octavia_api_host }}"
            className: "{{ openstack_helm_ingress_class_name | default('openstack') }}"
            annotations: "{{ openstack_helm_octavia_ingress_annotations }}"
          keystoneRef:
            name: keystone
          neutronRef:
            name: neutron
          secretsRef:
            name: octavia
          databaseRef:
            name: percona-xtradb
          rabbitmqRef:
            name: octavia
          amphoraConfig:
            network: "{{ _openstack_helm_octavia_management_network.id }}"
            flavor: "{{ _openstack_helm_octavia_amphora_flavor.id }}"
            imageOwner: "{{ _openstack_helm_octavia_amphora_image.image.owner }}"
            securityGroup: "{{ _openstack_helm_octavia_amphora_sg.id }}"
            serverCaRef:
              name: octavia-server-ca
            clientCertRef:
              name: octavia-client-certs
          healthManagers: "{{ _openstack_helm_octavia_controller_ip_port_list | sort }}"
          overrides: "{{ openstack_helm_octavia_values }}"
