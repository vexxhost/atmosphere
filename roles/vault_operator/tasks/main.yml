# Copyright (c) 2024 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Deploy Helm chart
  run_once: true
  kubernetes.core.helm:
    name: "{{ vault_operator_helm_release_name }}"
    chart_ref: "{{ vault_operator_helm_chart_ref }}"
    release_namespace: "{{ vault_operator_helm_release_namespace }}"
    create_namespace: true
    kubeconfig: /etc/kubernetes/admin.conf
    values: "{{ _vault_operator_helm_values | combine(vault_operator_helm_values, recursive=True) }}"

- name: Apply manifests for Vault Operator
  run_once: true
  kubernetes.core.k8s:
    state: present
    definition:
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: vault
          namespace: "{{ vault_operator_helm_release_namespace }}"

      - apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          name: vault
          namespace: "{{ vault_operator_helm_release_namespace }}"
        rules:
          - apiGroups: [""]
            resources: ["pods"]
            verbs: ["get", "patch", "update"]
          - apiGroups: [""]
            resources: ["secrets"]
            verbs: ["*"]

      - apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: vault
          namespace: "{{ vault_operator_helm_release_namespace }}"
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: vault
        subjects:
          - kind: ServiceAccount
            name: vault

      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: vault-auth-delegator
          namespace: "{{ vault_operator_helm_release_namespace }}"
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: system:auth-delegator
        subjects:
          - kind: ServiceAccount
            name: vault
            namespace: vault

      - apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          name: leader-election-role
          namespace: "{{ vault_operator_helm_release_namespace }}"
        rules:
          - apiGroups: [""]
            resources: ["configmaps"]
            verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
          - apiGroups: ["coordination.k8s.io"]
            resources: ["leases"]
            verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
          - apiGroups: [""]
            resources: ["events"]
            verbs: ["create", "patch"]

      - apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: leader-election-rolebinding
          namespace: "{{ vault_operator_helm_release_namespace }}"
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: leader-election-role
        subjects:
          - kind: ServiceAccount
            name: vault
