# Copyright (c) 2022 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Deploy operator
  kubernetes.core.k8s:
    state: present
    definition:
      - apiVersion: helm.toolkit.fluxcd.io/v2beta1
        kind: HelmRelease
        metadata:
          name: pxc-operator
          namespace: openstack
        spec:
          interval: 60s
          chart:
            spec:
              chart: pxc-operator
              version: 1.10.0
              sourceRef:
                kind: HelmRepository
                name: percona
          install:
            crds: CreateReplace
          upgrade:
            crds: CreateReplace
          values:
            nodeSelector:
              openstack-control-plane: enabled

- name: Deploy cluster
  kubernetes.core.k8s:
    state: present
    definition:
      - apiVersion: pxc.percona.com/v1-10-0
        kind: PerconaXtraDBCluster
        metadata:
          name: percona-xtradb
          namespace: openstack
        spec:
          crVersion: 1.10.0
          secretsName: percona-xtradb
          pxc:
            size: 3
            # NOTE(mnaser): https://jira.percona.com/browse/PXC-3914
            image: us-docker.pkg.dev/vexxhost-infra/openstack/percona-xtradb-cluster:5.7.36-31.55-socatfix
            autoRecovery: true
            configuration: |
              [mysqld]
              max_connections=8192
            sidecars:
              - name: exporter
                image: quay.io/prometheus/mysqld-exporter:v0.14.0
                ports:
                  - name: metrics
                    containerPort: 9104
                livenessProbe:
                  httpGet:
                    path: /
                    port: 9104
                env:
                  - name: MONITOR_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: percona-xtradb
                        key: monitor
                  - name: DATA_SOURCE_NAME
                    value: "monitor:$(MONITOR_PASSWORD)@(localhost:3306)/"
            nodeSelector:
              openstack-control-plane: enabled
            volumeSpec:
              persistentVolumeClaim:
                resources:
                  requests:
                    storage: 160Gi
          haproxy:
            enabled: true
            size: 3
            image: percona/percona-xtradb-cluster-operator:1.10.0-haproxy
            nodeSelector:
              openstack-control-plane: enabled

      - apiVersion: monitoring.coreos.com/v1
        kind: PodMonitor
        metadata:
          name: percona-xtradb-pxc
          namespace: monitoring
          labels:
            release: kube-prometheus-stack
        spec:
          jobLabel: app.kubernetes.io/component
          podMetricsEndpoints:
            - port: metrics
              path: /metrics
              relabelings:
                - sourceLabels: ["__meta_kubernetes_pod_name"]
                  targetLabel: "instance"
                - action: "labeldrop"
                  regex: "^(container|endpoint|namespace|pod|service)$"
          namespaceSelector:
            matchNames:
              - openstack
          selector:
            matchLabels:
              app.kubernetes.io/component: pxc
              app.kubernetes.io/instance: percona-xtradb

      - apiVersion: monitoring.coreos.com/v1
        kind: PrometheusRule
        metadata:
          name: percona-xtradb-pxc
          namespace: monitoring
          labels:
            release: kube-prometheus-stack
        spec:
          groups:
            # TODO: basic rules
            - name: general
              rules:
                - alert: MySQLDown
                  expr: mysql_up != 1
                  for: 5m
                  labels:
                    severity: critical
                - alert: MysqlTooManyConnections
                  expr: max_over_time(mysql_global_status_threads_connected[1m]) / mysql_global_variables_max_connections * 100 > 80
                  for: 2m
                  labels:
                    severity: warning
                - alert: MysqlHighThreadsRunning
                  expr: max_over_time(mysql_global_status_threads_running[1m]) / mysql_global_variables_max_connections * 100 > 60
                  for: 2m
                  labels:
                    severity: warning
                - alert: MysqlSlowQueries
                  expr: increase(mysql_global_status_slow_queries[1m]) > 0
                  for: 2m
                  labels:
                    severity: warning
            - name: galera
              rules:
                - alert: MySQLGaleraNotReady
                  expr: mysql_global_status_wsrep_ready != 1
                  for: 5m
                  labels:
                    severity: critical
                - alert: MySQLGaleraOutOfSync
                  expr: mysql_global_status_wsrep_local_state != 4 and mysql_global_variables_wsrep_desync == 0
                  for: 5m
                  labels:
                    severity: critical
                - alert: MySQLGaleraDonorFallingBehind
                  expr: mysql_global_status_wsrep_local_state == 2 and mysql_global_status_wsrep_local_recv_queue > 100
                  for: 5m
                  labels:
                    severity: warning
                - alert: MySQLReplicationNotRunning
                  expr: mysql_slave_status_slave_io_running == 0 or mysql_slave_status_slave_sql_running == 0
                  for: 2m
                  labels:
                    severity: critical
                - alert: MySQLReplicationLag
                  expr: (instance:mysql_slave_lag_seconds > 30) and on(instance) (predict_linear(instance:mysql_slave_lag_seconds[5m], 60 * 2) > 0)
                  for: 1m
                  labels:
                    severity: critical
                - alert: MySQLHeartbeatLag
                  expr: (instance:mysql_heartbeat_lag_seconds > 30) and on(instance) (predict_linear(instance:mysql_heartbeat_lag_seconds[5m], 60 * 2) > 0)
                  for: 1m
                  labels:
                    severity: critical
                - alert: MySQLInnoDBLogWaits
                  expr: rate(mysql_global_status_innodb_log_waits[15m]) > 10
                  labels:
                    severity: warning
  # NOTE(mnaser): Since we haven't moved to the operator pattern yet, we need to
  #               keep retrying a few times as the CRDs might not be installed
  #               yet.
  retries: 60
  delay: 5
  register: _result
  until: _result is not failed
