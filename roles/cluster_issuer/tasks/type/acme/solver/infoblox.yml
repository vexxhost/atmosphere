# Copyright (c) 2023 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Upload Helm chart
  run_once: true
  ansible.builtin.import_role:
    name: vexxhost.kubernetes.upload_helm_chart
  vars:
    upload_helm_chart_src: "{{ cluster_issuer_acme_infoblox_helm_chart_path }}"
    upload_helm_chart_dest: "{{ cluster_issuer_acme_infoblox_helm_chart_ref }}"

- name: Deploy Helm chart
  run_once: true
  kubernetes.core.helm:
    name: "{{ cluster_issuer_acme_infoblox_helm_release_name }}"
    chart_ref: "{{ cluster_issuer_acme_infoblox_helm_chart_ref }}"
    release_namespace: "{{ cluster_issuer_acme_infoblox_helm_release_namespace }}"
    create_namespace: true
    kubeconfig: /etc/kubernetes/admin.conf
    values: "{{ _cluster_issuer_acme_infoblox_helm_values | combine(cluster_issuer_acme_infoblox_helm_values, recursive=True) }}"

- name: Apply manifests for Infoblox integration
  run_once: true
  kubernetes.core.k8s:
    state: present
    definition:
      - apiVersion: v1
        kind: Secret
        metadata:
          name: "{{ cluster_issuer_acme_infoblox_secret_name }}"
          namespace: "{{ cluster_issuer_acme_infoblox_helm_release_namespace }}"
        type: Opaque
        stringData:
          username: "{{ cluster_issuer_acme_infoblox_username }}"
          password: "{{ cluster_issuer_acme_infoblox_password }}"

      - apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          name: "{{ cluster_issuer_acme_infoblox_role_name }}"
          namespace: "{{ cluster_issuer_acme_infoblox_helm_release_namespace }}"
        rules:
          - apiGroups: [""]
            resources: ["secrets"]
            verbs: ["get", "watch"]
            resourceNames: ["{{ cluster_issuer_acme_infoblox_secret_name }}"]

      - apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: "{{ cluster_issuer_acme_infoblox_role_binding_name }}"
          namespace: "{{ cluster_issuer_acme_infoblox_helm_release_namespace }}"
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: "{{ cluster_issuer_acme_infoblox_role_name }}"
        subjects:
          - kind: ServiceAccount
            name: "{{ cluster_issuer_acme_infoblox_service_account_name }}"
            namespace: "{{ cluster_issuer_acme_infoblox_helm_release_namespace }}"

      - apiVersion: cert-manager.io/v1
        kind: ClusterIssuer
        metadata:
          name: "{{ cluster_issuer_name }}"
        spec:
          acme:
            email: "{{ cluster_issuer_acme_email }}"
            server: "{{ cluster_issuer_acme_server }}"
            privateKeySecretRef:
              name: "{{ cluster_issuer_acme_private_key_secret_name }}"
            solvers:
              - dns01:
                  webhook:
                    groupName: "{{ cluster_issuer_acme_infoblox_group_name }}"
                    solverName: infoblox-wapi
                    config:
                      host: "{{ cluster_issuer_acme_infoblox_host }}"
                      view: "{{ cluster_issuer_acme_infoblox_view }}"
                      usernameSecretRef:
                        name: "{{ cluster_issuer_acme_infoblox_secret_name }}"
                        key: username
                      passwordSecretRef:
                        name: "{{ cluster_issuer_acme_infoblox_secret_name }}"
                        key: password
